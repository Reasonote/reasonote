---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.journal

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.journal)
------------------------------
--                                         Table "public.journal"
--     Column    |           Type           | Collation | Nullable |               Default                
-- --------------+--------------------------+-----------+----------+--------------------------------------
--  id           | text                     |           | not null | generate_typed_uuid('journal'::text)
--  _name        | text                     |           | not null | 
--  metadata     | jsonb                    |           |          | 
--  created_date | timestamp with time zone |           | not null | now()
--  updated_date | timestamp with time zone |           | not null | now()
--  created_by   | typed_uuid               |           |          | 
--  updated_by   | typed_uuid               |           |          | 
-- Indexes:
--     "journal_pkey" PRIMARY KEY, btree (id)
-- Check constraints:
--     "journal__id__check_prefix" CHECK (is_valid_typed_uuid('journal'::text, id::typed_uuid))
-- Foreign-key constraints:
--     "journal_created_by_fkey" FOREIGN KEY (created_by) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "journal_updated_by_fkey" FOREIGN KEY (updated_by) REFERENCES rsn_user(id) ON DELETE SET NULL
-- Policies:
--     POLICY "journal DELETE" FOR DELETE
--       USING ((((created_by)::text = (current_rsn_user_id())::text) OR is_admin()))
--     POLICY "journal INSERT" FOR INSERT
--       WITH CHECK ((((created_by)::text = (current_rsn_user_id())::text) OR is_admin()))
--     POLICY "journal SELECT" FOR SELECT
--       USING ((((created_by)::text = (current_rsn_user_id())::text) OR is_admin()))
--     POLICY "journal UPDATE" FOR UPDATE
--       USING ((((created_by)::text = (current_rsn_user_id())::text) OR is_admin()))
-- Triggers:
--     run_tgr_apply_audit BEFORE INSERT OR UPDATE ON journal FOR EACH ROW EXECUTE FUNCTION tgr_apply_audit()
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.journal)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.journal)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: journal; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.journal (
    id text DEFAULT public.generate_typed_uuid('journal'::text) NOT NULL,
    _name text NOT NULL,
    metadata jsonb,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    updated_date timestamp with time zone DEFAULT now() NOT NULL,
    created_by public.typed_uuid,
    updated_by public.typed_uuid,
    CONSTRAINT journal__id__check_prefix CHECK (public.is_valid_typed_uuid('journal'::text, (id)::public.typed_uuid))
);


ALTER TABLE public.journal OWNER TO postgres;

--
-- Name: journal journal_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.journal
    ADD CONSTRAINT journal_pkey PRIMARY KEY (id);


--
-- Name: journal run_tgr_apply_audit; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER run_tgr_apply_audit BEFORE INSERT OR UPDATE ON public.journal FOR EACH ROW EXECUTE FUNCTION public.tgr_apply_audit();


--
-- Name: journal journal_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.journal
    ADD CONSTRAINT journal_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: journal journal_updated_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.journal
    ADD CONSTRAINT journal_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: journal; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.journal ENABLE ROW LEVEL SECURITY;

--
-- Name: journal journal DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "journal DELETE" ON public.journal FOR DELETE USING ((((created_by)::text = (public.current_rsn_user_id())::text) OR public.is_admin()));


--
-- Name: journal journal INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "journal INSERT" ON public.journal FOR INSERT WITH CHECK ((((created_by)::text = (public.current_rsn_user_id())::text) OR public.is_admin()));


--
-- Name: journal journal SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "journal SELECT" ON public.journal FOR SELECT USING ((((created_by)::text = (public.current_rsn_user_id())::text) OR public.is_admin()));


--
-- Name: journal journal UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "journal UPDATE" ON public.journal FOR UPDATE USING ((((created_by)::text = (public.current_rsn_user_id())::text) OR public.is_admin()));


--
-- Name: TABLE journal; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.journal TO anon;
GRANT ALL ON TABLE public.journal TO authenticated;
GRANT ALL ON TABLE public.journal TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.journal)
---------------------------------------------------------------------------

