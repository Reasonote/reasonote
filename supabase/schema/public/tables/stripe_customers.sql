---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.stripe_customers

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.stripe_customers)
------------------------------
--                       Table "public.stripe_customers"
--    Column    |            Type             | Collation | Nullable | Default 
-- -------------+-----------------------------+-----------+----------+---------
--  id          | text                        |           | not null | 
--  email       | text                        |           |          | 
--  name        | text                        |           |          | 
--  description | text                        |           |          | 
--  created     | timestamp without time zone |           |          | 
--  attrs       | jsonb                       |           |          | 
-- Indexes:
--     "stripe_customers_pkey" PRIMARY KEY, btree (id)
-- Policies:
--     POLICY "stripe_customers DELETE" FOR DELETE
--       USING ((auth.role() = 'service_role'::text))
--     POLICY "stripe_customers INSERT" FOR INSERT
--       WITH CHECK ((auth.role() = 'service_role'::text))
--     POLICY "stripe_customers SELECT" FOR SELECT
--       USING (((auth.role() = 'service_role'::text) OR ((attrs ->> 'rsnUserId'::text) = (current_rsn_user_id())::text)))
--     POLICY "stripe_customers UPDATE" FOR UPDATE
--       USING ((auth.role() = 'service_role'::text))
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.stripe_customers)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.stripe_customers)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: stripe_customers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.stripe_customers (
    id text NOT NULL,
    email text,
    name text,
    description text,
    created timestamp without time zone,
    attrs jsonb
);


ALTER TABLE public.stripe_customers OWNER TO postgres;

--
-- Name: stripe_customers stripe_customers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.stripe_customers
    ADD CONSTRAINT stripe_customers_pkey PRIMARY KEY (id);


--
-- Name: stripe_customers; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.stripe_customers ENABLE ROW LEVEL SECURITY;

--
-- Name: stripe_customers stripe_customers DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "stripe_customers DELETE" ON public.stripe_customers FOR DELETE USING ((auth.role() = 'service_role'::text));


--
-- Name: stripe_customers stripe_customers INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "stripe_customers INSERT" ON public.stripe_customers FOR INSERT WITH CHECK ((auth.role() = 'service_role'::text));


--
-- Name: stripe_customers stripe_customers SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "stripe_customers SELECT" ON public.stripe_customers FOR SELECT USING (((auth.role() = 'service_role'::text) OR ((attrs ->> 'rsnUserId'::text) = (public.current_rsn_user_id())::text)));


--
-- Name: stripe_customers stripe_customers UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "stripe_customers UPDATE" ON public.stripe_customers FOR UPDATE USING ((auth.role() = 'service_role'::text));


--
-- Name: TABLE stripe_customers; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.stripe_customers TO anon;
GRANT ALL ON TABLE public.stripe_customers TO authenticated;
GRANT ALL ON TABLE public.stripe_customers TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.stripe_customers)
---------------------------------------------------------------------------

