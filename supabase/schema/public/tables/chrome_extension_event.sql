---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.chrome_extension_event

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.chrome_extension_event)
------------------------------
--                                   Table "public.chrome_extension_event"
--     Column    |           Type           | Collation | Nullable |                Default                 
-- --------------+--------------------------+-----------+----------+----------------------------------------
--  id           | text                     |           | not null | generate_typed_uuid('chrextevt'::text)
--  rsn_user_id  | text                     |           | not null | 
--  site_url     | text                     |           |          | 
--  page_title   | text                     |           |          | 
--  event_type   | text                     |           | not null | 
--  metadata     | jsonb                    |           |          | 
--  viewed_at    | timestamp with time zone |           | not null | 
--  created_date | timestamp with time zone |           | not null | now()
--  updated_date | timestamp with time zone |           | not null | now()
--  created_by   | text                     |           |          | 
--  updated_by   | text                     |           |          | 
-- Indexes:
--     "chrome_extension_event_pkey" PRIMARY KEY, btree (id)
--     "idx_chrome_extension_event_event_type" btree (event_type)
--     "idx_chrome_extension_event_rsn_user_id" btree (rsn_user_id)
--     "idx_chrome_extension_event_viewed_at" btree (viewed_at)
-- Foreign-key constraints:
--     "chrome_extension_event_created_by_fkey" FOREIGN KEY (created_by) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "chrome_extension_event_rsn_user_id_fkey" FOREIGN KEY (rsn_user_id) REFERENCES rsn_user(id)
--     "chrome_extension_event_updated_by_fkey" FOREIGN KEY (updated_by) REFERENCES rsn_user(id) ON DELETE SET NULL
-- Policies:
--     POLICY "chrome_extension_event_delete_policy" FOR DELETE
--       TO authenticated
--       USING ((rsn_user_id = (current_rsn_user_id())::text))
--     POLICY "chrome_extension_event_insert_policy" FOR INSERT
--       TO authenticated
--       WITH CHECK ((rsn_user_id = (current_rsn_user_id())::text))
--     POLICY "chrome_extension_event_select_policy" FOR SELECT
--       TO authenticated
--       USING ((rsn_user_id = (current_rsn_user_id())::text))
--     POLICY "chrome_extension_event_service_policy"
--       TO service_role
--       USING (true)
--     POLICY "chrome_extension_event_update_policy" FOR UPDATE
--       TO authenticated
--       USING ((rsn_user_id = (current_rsn_user_id())::text))
-- Triggers:
--     log_operation AFTER INSERT OR DELETE OR UPDATE ON chrome_extension_event FOR EACH ROW EXECUTE FUNCTION tgr_log_operation()
--     run_tgr_apply_audit BEFORE INSERT OR UPDATE ON chrome_extension_event FOR EACH ROW EXECUTE FUNCTION tgr_apply_audit()
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.chrome_extension_event)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.chrome_extension_event)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: chrome_extension_event; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.chrome_extension_event (
    id text DEFAULT public.generate_typed_uuid('chrextevt'::text) NOT NULL,
    rsn_user_id text NOT NULL,
    site_url text,
    page_title text,
    event_type text NOT NULL,
    metadata jsonb,
    viewed_at timestamp with time zone NOT NULL,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    updated_date timestamp with time zone DEFAULT now() NOT NULL,
    created_by text,
    updated_by text
);


ALTER TABLE public.chrome_extension_event OWNER TO postgres;

--
-- Name: TABLE chrome_extension_event; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.chrome_extension_event IS 'Events captured by the Chrome extension';


--
-- Name: COLUMN chrome_extension_event.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chrome_extension_event.id IS 'The unique identifier for the event';


--
-- Name: COLUMN chrome_extension_event.rsn_user_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chrome_extension_event.rsn_user_id IS 'The user that the event belongs to';


--
-- Name: COLUMN chrome_extension_event.site_url; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chrome_extension_event.site_url IS 'The URL of the site where the event occurred';


--
-- Name: COLUMN chrome_extension_event.page_title; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chrome_extension_event.page_title IS 'The title of the page where the event occurred';


--
-- Name: COLUMN chrome_extension_event.event_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chrome_extension_event.event_type IS 'The type of event (e.g., page_view)';


--
-- Name: COLUMN chrome_extension_event.metadata; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chrome_extension_event.metadata IS 'Additional metadata about the event, in JSON format';


--
-- Name: COLUMN chrome_extension_event.viewed_at; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chrome_extension_event.viewed_at IS 'When the event occurred from the user perspective';


--
-- Name: COLUMN chrome_extension_event.created_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chrome_extension_event.created_date IS 'When this record was created';


--
-- Name: COLUMN chrome_extension_event.updated_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chrome_extension_event.updated_date IS 'When this record was last updated';


--
-- Name: COLUMN chrome_extension_event.created_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chrome_extension_event.created_by IS 'The user that created this record';


--
-- Name: COLUMN chrome_extension_event.updated_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chrome_extension_event.updated_by IS 'The user that last updated this record';


--
-- Name: chrome_extension_event chrome_extension_event_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chrome_extension_event
    ADD CONSTRAINT chrome_extension_event_pkey PRIMARY KEY (id);


--
-- Name: idx_chrome_extension_event_event_type; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_chrome_extension_event_event_type ON public.chrome_extension_event USING btree (event_type);


--
-- Name: idx_chrome_extension_event_rsn_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_chrome_extension_event_rsn_user_id ON public.chrome_extension_event USING btree (rsn_user_id);


--
-- Name: idx_chrome_extension_event_viewed_at; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_chrome_extension_event_viewed_at ON public.chrome_extension_event USING btree (viewed_at);


--
-- Name: chrome_extension_event log_operation; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER log_operation AFTER INSERT OR DELETE OR UPDATE ON public.chrome_extension_event FOR EACH ROW EXECUTE FUNCTION public.tgr_log_operation();


--
-- Name: chrome_extension_event run_tgr_apply_audit; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER run_tgr_apply_audit BEFORE INSERT OR UPDATE ON public.chrome_extension_event FOR EACH ROW EXECUTE FUNCTION public.tgr_apply_audit();


--
-- Name: chrome_extension_event chrome_extension_event_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chrome_extension_event
    ADD CONSTRAINT chrome_extension_event_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: chrome_extension_event chrome_extension_event_rsn_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chrome_extension_event
    ADD CONSTRAINT chrome_extension_event_rsn_user_id_fkey FOREIGN KEY (rsn_user_id) REFERENCES public.rsn_user(id);


--
-- Name: chrome_extension_event chrome_extension_event_updated_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chrome_extension_event
    ADD CONSTRAINT chrome_extension_event_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: chrome_extension_event; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.chrome_extension_event ENABLE ROW LEVEL SECURITY;

--
-- Name: chrome_extension_event chrome_extension_event_delete_policy; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY chrome_extension_event_delete_policy ON public.chrome_extension_event FOR DELETE TO authenticated USING ((rsn_user_id = (public.current_rsn_user_id())::text));


--
-- Name: chrome_extension_event chrome_extension_event_insert_policy; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY chrome_extension_event_insert_policy ON public.chrome_extension_event FOR INSERT TO authenticated WITH CHECK ((rsn_user_id = (public.current_rsn_user_id())::text));


--
-- Name: chrome_extension_event chrome_extension_event_select_policy; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY chrome_extension_event_select_policy ON public.chrome_extension_event FOR SELECT TO authenticated USING ((rsn_user_id = (public.current_rsn_user_id())::text));


--
-- Name: chrome_extension_event chrome_extension_event_service_policy; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY chrome_extension_event_service_policy ON public.chrome_extension_event TO service_role USING (true);


--
-- Name: chrome_extension_event chrome_extension_event_update_policy; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY chrome_extension_event_update_policy ON public.chrome_extension_event FOR UPDATE TO authenticated USING ((rsn_user_id = (public.current_rsn_user_id())::text));


--
-- Name: TABLE chrome_extension_event; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.chrome_extension_event TO anon;
GRANT ALL ON TABLE public.chrome_extension_event TO authenticated;
GRANT ALL ON TABLE public.chrome_extension_event TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.chrome_extension_event)
---------------------------------------------------------------------------

