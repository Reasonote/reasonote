---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.lesson_session

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.lesson_session)
------------------------------
--                                      Table "public.lesson_session"
--     Column    |           Type           | Collation | Nullable |               Default                
-- --------------+--------------------------+-----------+----------+--------------------------------------
--  id           | text                     |           | not null | generate_typed_uuid('lsnsess'::text)
--  lesson       | text                     |           |          | 
--  _user        | text                     |           |          | 
--  metadata     | jsonb                    |           |          | 
--  created_date | timestamp with time zone |           | not null | now()
--  updated_date | timestamp with time zone |           | not null | now()
--  created_by   | typed_uuid               |           |          | 
--  updated_by   | typed_uuid               |           |          | 
-- Indexes:
--     "lesson_session_pkey" PRIMARY KEY, btree (id)
-- Check constraints:
--     "user_lesson_instance__id__check_prefix" CHECK (is_valid_typed_uuid('lsnsess'::text, id::typed_uuid))
-- Foreign-key constraints:
--     "lesson_session__user_fkey" FOREIGN KEY (_user) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "lesson_session_created_by_fkey" FOREIGN KEY (created_by) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "lesson_session_lesson_fkey" FOREIGN KEY (lesson) REFERENCES lesson(id) ON DELETE SET NULL
--     "lesson_session_updated_by_fkey" FOREIGN KEY (updated_by) REFERENCES rsn_user(id) ON DELETE SET NULL
-- Referenced by:
--     TABLE "user_activity_result" CONSTRAINT "user_activity_result_lesson_session_id_fkey" FOREIGN KEY (lesson_session_id) REFERENCES lesson_session(id) ON DELETE SET NULL
-- Policies:
--     POLICY "lesson_session DELETE" FOR DELETE
--       USING ((((created_by)::text = (current_rsn_user_id())::text) OR (_user = (current_rsn_user_id())::text)))
--     POLICY "lesson_session INSERT" FOR INSERT
--       WITH CHECK ((((created_by)::text = (current_rsn_user_id())::text) OR (_user = (current_rsn_user_id())::text)))
--     POLICY "lesson_session SELECT" FOR SELECT
--       USING ((((created_by)::text = (current_rsn_user_id())::text) OR (_user = (current_rsn_user_id())::text)))
--     POLICY "lesson_session UPDATE" FOR UPDATE
--       USING ((((created_by)::text = (current_rsn_user_id())::text) OR (_user = (current_rsn_user_id())::text)))
-- Triggers:
--     log_operation AFTER INSERT OR DELETE OR UPDATE ON lesson_session FOR EACH ROW EXECUTE FUNCTION tgr_log_operation()
--     run_tgr_apply_audit BEFORE INSERT OR UPDATE ON lesson_session FOR EACH ROW EXECUTE FUNCTION tgr_apply_audit()
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.lesson_session)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.lesson_session)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: lesson_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lesson_session (
    id text DEFAULT public.generate_typed_uuid('lsnsess'::text) NOT NULL,
    lesson text,
    _user text,
    metadata jsonb,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    updated_date timestamp with time zone DEFAULT now() NOT NULL,
    created_by public.typed_uuid,
    updated_by public.typed_uuid,
    CONSTRAINT user_lesson_instance__id__check_prefix CHECK (public.is_valid_typed_uuid('lsnsess'::text, (id)::public.typed_uuid))
);


ALTER TABLE public.lesson_session OWNER TO postgres;

--
-- Name: TABLE lesson_session; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.lesson_session IS 'A user''s session for an lesson';


--
-- Name: COLUMN lesson_session.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_session.id IS 'The unique identifier for the user lesson session';


--
-- Name: COLUMN lesson_session.lesson; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_session.lesson IS 'The lesson that the user lesson session is for';


--
-- Name: COLUMN lesson_session._user; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_session._user IS 'The user that the user lesson session is for';


--
-- Name: COLUMN lesson_session.metadata; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_session.metadata IS 'The metadata of the user lesson session';


--
-- Name: COLUMN lesson_session.created_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_session.created_date IS 'The date the user lesson session was created';


--
-- Name: COLUMN lesson_session.updated_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_session.updated_date IS 'The date the user lesson session was last updated';


--
-- Name: COLUMN lesson_session.created_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_session.created_by IS 'The user that created the user lesson session';


--
-- Name: COLUMN lesson_session.updated_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_session.updated_by IS 'The user that last updated the user lesson session';


--
-- Name: lesson_session lesson_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lesson_session
    ADD CONSTRAINT lesson_session_pkey PRIMARY KEY (id);


--
-- Name: lesson_session log_operation; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER log_operation AFTER INSERT OR DELETE OR UPDATE ON public.lesson_session FOR EACH ROW EXECUTE FUNCTION public.tgr_log_operation();


--
-- Name: lesson_session run_tgr_apply_audit; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER run_tgr_apply_audit BEFORE INSERT OR UPDATE ON public.lesson_session FOR EACH ROW EXECUTE FUNCTION public.tgr_apply_audit();


--
-- Name: lesson_session lesson_session__user_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lesson_session
    ADD CONSTRAINT lesson_session__user_fkey FOREIGN KEY (_user) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: lesson_session lesson_session_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lesson_session
    ADD CONSTRAINT lesson_session_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: lesson_session lesson_session_lesson_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lesson_session
    ADD CONSTRAINT lesson_session_lesson_fkey FOREIGN KEY (lesson) REFERENCES public.lesson(id) ON DELETE SET NULL;


--
-- Name: lesson_session lesson_session_updated_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lesson_session
    ADD CONSTRAINT lesson_session_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: lesson_session; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.lesson_session ENABLE ROW LEVEL SECURITY;

--
-- Name: lesson_session lesson_session DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "lesson_session DELETE" ON public.lesson_session FOR DELETE USING ((((created_by)::text = (public.current_rsn_user_id())::text) OR (_user = (public.current_rsn_user_id())::text)));


--
-- Name: lesson_session lesson_session INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "lesson_session INSERT" ON public.lesson_session FOR INSERT WITH CHECK ((((created_by)::text = (public.current_rsn_user_id())::text) OR (_user = (public.current_rsn_user_id())::text)));


--
-- Name: lesson_session lesson_session SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "lesson_session SELECT" ON public.lesson_session FOR SELECT USING ((((created_by)::text = (public.current_rsn_user_id())::text) OR (_user = (public.current_rsn_user_id())::text)));


--
-- Name: lesson_session lesson_session UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "lesson_session UPDATE" ON public.lesson_session FOR UPDATE USING ((((created_by)::text = (public.current_rsn_user_id())::text) OR (_user = (public.current_rsn_user_id())::text)));


--
-- Name: TABLE lesson_session; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.lesson_session TO anon;
GRANT ALL ON TABLE public.lesson_session TO authenticated;
GRANT ALL ON TABLE public.lesson_session TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.lesson_session)
---------------------------------------------------------------------------

