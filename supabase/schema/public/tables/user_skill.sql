---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.user_skill

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.user_skill)
------------------------------
--                                            Table "public.user_skill"
--        Column        |           Type           | Collation | Nullable |                Default                
-- ---------------------+--------------------------+-----------+----------+---------------------------------------
--  id                  | text                     |           | not null | generate_typed_uuid('usrskill'::text)
--  skill               | typed_uuid               |           | not null | 
--  rsn_user            | typed_uuid               |           | not null | 
--  metadata            | jsonb                    |           |          | 
--  created_date        | timestamp with time zone |           | not null | now()
--  updated_date        | timestamp with time zone |           | not null | now()
--  created_by          | typed_uuid               |           |          | 
--  updated_by          | typed_uuid               |           |          | 
--  self_assigned_level | text                     |           |          | 
--  interest_reasons    | text[]                   |           |          | 
--  current_chapter     | text                     |           |          | 
--  specifics           | text[]                   |           |          | '{}'::text[]
-- Indexes:
--     "user_skill_pkey" PRIMARY KEY, btree (id)
--     "user_skill_unique_to_user_and_skill" UNIQUE CONSTRAINT, btree (rsn_user, skill)
-- Check constraints:
--     "user_skill__id__check_prefix" CHECK (is_valid_typed_uuid('usrskill'::text, id::typed_uuid))
-- Foreign-key constraints:
--     "user_skill_created_by_fkey" FOREIGN KEY (created_by) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "user_skill_current_chapter_fkey" FOREIGN KEY (current_chapter) REFERENCES chapter(id) ON DELETE SET NULL
--     "user_skill_rsn_user_fkey" FOREIGN KEY (rsn_user) REFERENCES rsn_user(id) ON DELETE CASCADE
--     "user_skill_skill_fkey" FOREIGN KEY (skill) REFERENCES skill(id) ON DELETE CASCADE
--     "user_skill_updated_by_fkey" FOREIGN KEY (updated_by) REFERENCES rsn_user(id) ON DELETE SET NULL
-- Policies:
--     POLICY "user_skill DELETE" FOR DELETE
--       USING ((((created_by)::text = (current_rsn_user_id())::text) OR is_admin()))
--     POLICY "user_skill INSERT" FOR INSERT
--       WITH CHECK ((((created_by)::text = (current_rsn_user_id())::text) OR is_admin()))
--     POLICY "user_skill SELECT" FOR SELECT
--       USING ((((created_by)::text = (current_rsn_user_id())::text) OR is_admin()))
--     POLICY "user_skill UPDATE" FOR UPDATE
--       USING ((((created_by)::text = (current_rsn_user_id())::text) OR is_admin()))
-- Triggers:
--     log_operation AFTER INSERT OR DELETE OR UPDATE ON user_skill FOR EACH ROW EXECUTE FUNCTION tgr_log_operation()
--     run_tgr_apply_audit BEFORE INSERT OR UPDATE ON user_skill FOR EACH ROW EXECUTE FUNCTION tgr_apply_audit()
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.user_skill)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.user_skill)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: user_skill; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.user_skill (
    id text DEFAULT public.generate_typed_uuid('usrskill'::text) NOT NULL,
    skill public.typed_uuid NOT NULL,
    rsn_user public.typed_uuid NOT NULL,
    metadata jsonb,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    updated_date timestamp with time zone DEFAULT now() NOT NULL,
    created_by public.typed_uuid,
    updated_by public.typed_uuid,
    self_assigned_level text,
    interest_reasons text[],
    current_chapter text,
    specifics text[] DEFAULT '{}'::text[],
    CONSTRAINT user_skill__id__check_prefix CHECK (public.is_valid_typed_uuid('usrskill'::text, (id)::public.typed_uuid))
);


ALTER TABLE public.user_skill OWNER TO postgres;

--
-- Name: COLUMN user_skill.current_chapter; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.user_skill.current_chapter IS 'The chapter that the user is currently working on for this skill.';


--
-- Name: user_skill user_skill_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_skill
    ADD CONSTRAINT user_skill_pkey PRIMARY KEY (id);


--
-- Name: user_skill user_skill_unique_to_user_and_skill; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_skill
    ADD CONSTRAINT user_skill_unique_to_user_and_skill UNIQUE (rsn_user, skill);


--
-- Name: user_skill log_operation; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER log_operation AFTER INSERT OR DELETE OR UPDATE ON public.user_skill FOR EACH ROW EXECUTE FUNCTION public.tgr_log_operation();


--
-- Name: user_skill run_tgr_apply_audit; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER run_tgr_apply_audit BEFORE INSERT OR UPDATE ON public.user_skill FOR EACH ROW EXECUTE FUNCTION public.tgr_apply_audit();


--
-- Name: user_skill user_skill_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_skill
    ADD CONSTRAINT user_skill_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: user_skill user_skill_current_chapter_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_skill
    ADD CONSTRAINT user_skill_current_chapter_fkey FOREIGN KEY (current_chapter) REFERENCES public.chapter(id) ON DELETE SET NULL;


--
-- Name: user_skill user_skill_rsn_user_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_skill
    ADD CONSTRAINT user_skill_rsn_user_fkey FOREIGN KEY (rsn_user) REFERENCES public.rsn_user(id) ON DELETE CASCADE;


--
-- Name: user_skill user_skill_skill_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_skill
    ADD CONSTRAINT user_skill_skill_fkey FOREIGN KEY (skill) REFERENCES public.skill(id) ON DELETE CASCADE;


--
-- Name: user_skill user_skill_updated_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_skill
    ADD CONSTRAINT user_skill_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: user_skill; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.user_skill ENABLE ROW LEVEL SECURITY;

--
-- Name: user_skill user_skill DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "user_skill DELETE" ON public.user_skill FOR DELETE USING ((((created_by)::text = (public.current_rsn_user_id())::text) OR public.is_admin()));


--
-- Name: user_skill user_skill INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "user_skill INSERT" ON public.user_skill FOR INSERT WITH CHECK ((((created_by)::text = (public.current_rsn_user_id())::text) OR public.is_admin()));


--
-- Name: user_skill user_skill SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "user_skill SELECT" ON public.user_skill FOR SELECT USING ((((created_by)::text = (public.current_rsn_user_id())::text) OR public.is_admin()));


--
-- Name: user_skill user_skill UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "user_skill UPDATE" ON public.user_skill FOR UPDATE USING ((((created_by)::text = (public.current_rsn_user_id())::text) OR public.is_admin()));


--
-- Name: TABLE user_skill; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.user_skill TO anon;
GRANT ALL ON TABLE public.user_skill TO authenticated;
GRANT ALL ON TABLE public.user_skill TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.user_skill)
---------------------------------------------------------------------------

