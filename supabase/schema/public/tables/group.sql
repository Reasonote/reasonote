---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.group

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.group)
------------------------------
--                             Table "public.group"
--    Column   | Type | Collation | Nullable |             Default              
-- ------------+------+-----------+----------+----------------------------------
--  id         | text |           | not null | generate_typed_uuid('grp'::text)
--  group_name | text |           |          | 
-- Indexes:
--     "group_pkey" PRIMARY KEY, btree (id)
-- Check constraints:
--     "group__id__check_prefix" CHECK (is_valid_typed_uuid('grp'::text, id::typed_uuid))
-- Referenced by:
--     TABLE "memauth" CONSTRAINT "memauth_principal_group_id_fkey" FOREIGN KEY (principal_group_id) REFERENCES "group"(id) ON DELETE CASCADE
--     TABLE "member_authorization" CONSTRAINT "member_authorization_granted_group_id_fkey" FOREIGN KEY (granted_group_id) REFERENCES "group"(id) ON DELETE CASCADE
--     TABLE "member_authorization" CONSTRAINT "member_authorization_group_id_fkey" FOREIGN KEY (group_id) REFERENCES "group"(id) ON DELETE CASCADE
-- Policies:
--     POLICY "group DELETE" FOR DELETE
--       USING (true)
--     POLICY "group INSERT" FOR SELECT
--       USING (true)
--     POLICY "group SELECT" FOR SELECT
--       USING (true)
--     POLICY "group UPDATE" FOR UPDATE
--       USING (true)
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.group)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.group)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."group" (
    id text DEFAULT public.generate_typed_uuid('grp'::text) NOT NULL,
    group_name text,
    CONSTRAINT group__id__check_prefix CHECK (public.is_valid_typed_uuid('grp'::text, (id)::public.typed_uuid))
);


ALTER TABLE public."group" OWNER TO postgres;

--
-- Name: group group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."group"
    ADD CONSTRAINT group_pkey PRIMARY KEY (id);


--
-- Name: group; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public."group" ENABLE ROW LEVEL SECURITY;

--
-- Name: group group DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "group DELETE" ON public."group" FOR DELETE USING (true);


--
-- Name: group group INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "group INSERT" ON public."group" FOR SELECT USING (true);


--
-- Name: group group SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "group SELECT" ON public."group" FOR SELECT USING (true);


--
-- Name: group group UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "group UPDATE" ON public."group" FOR UPDATE USING (true);


--
-- Name: TABLE "group"; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public."group" TO anon;
GRANT ALL ON TABLE public."group" TO authenticated;
GRANT ALL ON TABLE public."group" TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.group)
---------------------------------------------------------------------------

