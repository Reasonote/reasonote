---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.rsn_page_vector

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.rsn_page_vector)
------------------------------
--                                       Table "public.rsn_page_vector"
--      Column      |           Type           | Collation | Nullable |                Default                
-- -----------------+--------------------------+-----------+----------+---------------------------------------
--  id              | text                     |           | not null | generate_typed_uuid('rsnpagev'::text)
--  rsn_page_id     | text                     |           |          | 
--  rsn_page_offset | integer                  |           | not null | 
--  embedding       | vector                   |           |          | 
--  raw_content     | text                     |           |          | 
--  created_date    | timestamp with time zone |           | not null | now()
--  updated_date    | timestamp with time zone |           | not null | now()
--  created_by      | text                     |           |          | 
--  updated_by      | text                     |           |          | 
-- Indexes:
--     "rsn_page_vector_pkey" PRIMARY KEY, btree (id)
-- Check constraints:
--     "rsn_page_vector__id__check_prefix" CHECK (is_valid_typed_uuid('rsnpagev'::text, id::typed_uuid))
-- Foreign-key constraints:
--     "rsn_page_vector_created_by_fkey" FOREIGN KEY (created_by) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "rsn_page_vector_rsn_page_id_fkey" FOREIGN KEY (rsn_page_id) REFERENCES rsn_page(id) ON DELETE CASCADE
--     "rsn_page_vector_updated_by_fkey" FOREIGN KEY (updated_by) REFERENCES rsn_user(id) ON DELETE SET NULL
-- Policies:
--     POLICY "rsn_page_vector DELETE" FOR DELETE
--       USING (true)
--     POLICY "rsn_page_vector INSERT" FOR INSERT
--       WITH CHECK (true)
--     POLICY "rsn_page_vector SELECT" FOR SELECT
--       USING (true)
--     POLICY "rsn_page_vector UPDATE" FOR UPDATE
--       USING (true)
-- Triggers:
--     log_operation AFTER INSERT OR DELETE OR UPDATE ON rsn_page_vector FOR EACH ROW EXECUTE FUNCTION tgr_log_operation()
--     run_tgr_apply_audit BEFORE INSERT OR UPDATE ON rsn_page_vector FOR EACH ROW EXECUTE FUNCTION tgr_apply_audit()
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.rsn_page_vector)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.rsn_page_vector)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: rsn_page_vector; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rsn_page_vector (
    id text DEFAULT public.generate_typed_uuid('rsnpagev'::text) NOT NULL,
    rsn_page_id text,
    rsn_page_offset integer NOT NULL,
    embedding extensions.vector,
    raw_content text,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    updated_date timestamp with time zone DEFAULT now() NOT NULL,
    created_by text,
    updated_by text,
    CONSTRAINT rsn_page_vector__id__check_prefix CHECK (public.is_valid_typed_uuid('rsnpagev'::text, (id)::public.typed_uuid))
);


ALTER TABLE public.rsn_page_vector OWNER TO postgres;

--
-- Name: TABLE rsn_page_vector; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.rsn_page_vector IS 'The vector for a rsn_page.';


--
-- Name: COLUMN rsn_page_vector.rsn_page_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rsn_page_vector.rsn_page_id IS 'The page that this vector is for.';


--
-- Name: COLUMN rsn_page_vector.rsn_page_offset; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rsn_page_vector.rsn_page_offset IS 'The offset of the vector in the page.';


--
-- Name: COLUMN rsn_page_vector.embedding; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rsn_page_vector.embedding IS 'The embedding of the vector.';


--
-- Name: COLUMN rsn_page_vector.raw_content; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rsn_page_vector.raw_content IS 'The raw content of the vector.';


--
-- Name: COLUMN rsn_page_vector.created_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rsn_page_vector.created_date IS 'The date the vector was created.';


--
-- Name: COLUMN rsn_page_vector.updated_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rsn_page_vector.updated_date IS 'The date the vector was last updated.';


--
-- Name: COLUMN rsn_page_vector.created_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rsn_page_vector.created_by IS 'The user that created the vector.';


--
-- Name: COLUMN rsn_page_vector.updated_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.rsn_page_vector.updated_by IS 'The user that last updated the vector.';


--
-- Name: rsn_page_vector rsn_page_vector_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rsn_page_vector
    ADD CONSTRAINT rsn_page_vector_pkey PRIMARY KEY (id);


--
-- Name: rsn_page_vector log_operation; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER log_operation AFTER INSERT OR DELETE OR UPDATE ON public.rsn_page_vector FOR EACH ROW EXECUTE FUNCTION public.tgr_log_operation();


--
-- Name: rsn_page_vector run_tgr_apply_audit; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER run_tgr_apply_audit BEFORE INSERT OR UPDATE ON public.rsn_page_vector FOR EACH ROW EXECUTE FUNCTION public.tgr_apply_audit();


--
-- Name: rsn_page_vector rsn_page_vector_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rsn_page_vector
    ADD CONSTRAINT rsn_page_vector_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: rsn_page_vector rsn_page_vector_rsn_page_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rsn_page_vector
    ADD CONSTRAINT rsn_page_vector_rsn_page_id_fkey FOREIGN KEY (rsn_page_id) REFERENCES public.rsn_page(id) ON DELETE CASCADE;


--
-- Name: rsn_page_vector rsn_page_vector_updated_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rsn_page_vector
    ADD CONSTRAINT rsn_page_vector_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: rsn_page_vector; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.rsn_page_vector ENABLE ROW LEVEL SECURITY;

--
-- Name: rsn_page_vector rsn_page_vector DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "rsn_page_vector DELETE" ON public.rsn_page_vector FOR DELETE USING (true);


--
-- Name: rsn_page_vector rsn_page_vector INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "rsn_page_vector INSERT" ON public.rsn_page_vector FOR INSERT WITH CHECK (true);


--
-- Name: rsn_page_vector rsn_page_vector SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "rsn_page_vector SELECT" ON public.rsn_page_vector FOR SELECT USING (true);


--
-- Name: rsn_page_vector rsn_page_vector UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "rsn_page_vector UPDATE" ON public.rsn_page_vector FOR UPDATE USING (true);


--
-- Name: TABLE rsn_page_vector; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.rsn_page_vector TO anon;
GRANT ALL ON TABLE public.rsn_page_vector TO authenticated;
GRANT ALL ON TABLE public.rsn_page_vector TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.rsn_page_vector)
---------------------------------------------------------------------------

