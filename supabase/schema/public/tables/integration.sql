---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.integration

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.integration)
------------------------------
--                                       Table "public.integration"
--     Column    |           Type           | Collation | Nullable |               Default                
-- --------------+--------------------------+-----------+----------+--------------------------------------
--  id           | text                     |           | not null | generate_typed_uuid('intgrtn'::text)
--  _type        | text                     |           | not null | 
--  metadata     | jsonb                    |           |          | 
--  created_date | timestamp with time zone |           | not null | now()
--  updated_date | timestamp with time zone |           | not null | now()
--  created_by   | typed_uuid               |           |          | 
--  updated_by   | typed_uuid               |           |          | 
--  for_user     | text                     |           |          | 
--  last_synced  | timestamp with time zone |           |          | 
-- Indexes:
--     "integration_pkey" PRIMARY KEY, btree (id)
-- Check constraints:
--     "integration__id__check_prefix" CHECK (is_valid_typed_uuid('intgrtn'::text, id::typed_uuid))
-- Foreign-key constraints:
--     "integration_created_by_fkey" FOREIGN KEY (created_by) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "integration_for_user_fkey" FOREIGN KEY (for_user) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "integration_updated_by_fkey" FOREIGN KEY (updated_by) REFERENCES rsn_user(id) ON DELETE SET NULL
-- Referenced by:
--     TABLE "integration_token" CONSTRAINT "integration_token_integration_id_fkey" FOREIGN KEY (integration_id) REFERENCES integration(id) ON DELETE CASCADE
--     TABLE "snip" CONSTRAINT "snip_source_integration_fkey" FOREIGN KEY (source_integration) REFERENCES integration(id) ON DELETE SET NULL
-- Policies:
--     POLICY "integration DELETE" FOR DELETE
--       USING ((for_user = (current_rsn_user_id())::text))
--     POLICY "integration INSERT" FOR INSERT
--       WITH CHECK ((for_user = (current_rsn_user_id())::text))
--     POLICY "integration SELECT" FOR SELECT
--       USING ((for_user = (current_rsn_user_id())::text))
--     POLICY "integration UPDATE" FOR UPDATE
--       USING ((for_user = (current_rsn_user_id())::text))
-- Triggers:
--     log_operation AFTER INSERT OR DELETE OR UPDATE ON integration FOR EACH ROW EXECUTE FUNCTION tgr_log_operation()
--     run_tgr_apply_audit BEFORE INSERT OR UPDATE ON integration FOR EACH ROW EXECUTE FUNCTION tgr_apply_audit()
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.integration)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.integration)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: integration; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.integration (
    id text DEFAULT public.generate_typed_uuid('intgrtn'::text) NOT NULL,
    _type text NOT NULL,
    metadata jsonb,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    updated_date timestamp with time zone DEFAULT now() NOT NULL,
    created_by public.typed_uuid,
    updated_by public.typed_uuid,
    for_user text,
    last_synced timestamp with time zone,
    CONSTRAINT integration__id__check_prefix CHECK (public.is_valid_typed_uuid('intgrtn'::text, (id)::public.typed_uuid))
);


ALTER TABLE public.integration OWNER TO postgres;

--
-- Name: integration integration_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.integration
    ADD CONSTRAINT integration_pkey PRIMARY KEY (id);


--
-- Name: integration log_operation; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER log_operation AFTER INSERT OR DELETE OR UPDATE ON public.integration FOR EACH ROW EXECUTE FUNCTION public.tgr_log_operation();


--
-- Name: integration run_tgr_apply_audit; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER run_tgr_apply_audit BEFORE INSERT OR UPDATE ON public.integration FOR EACH ROW EXECUTE FUNCTION public.tgr_apply_audit();


--
-- Name: integration integration_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.integration
    ADD CONSTRAINT integration_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: integration integration_for_user_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.integration
    ADD CONSTRAINT integration_for_user_fkey FOREIGN KEY (for_user) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: integration integration_updated_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.integration
    ADD CONSTRAINT integration_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: integration; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.integration ENABLE ROW LEVEL SECURITY;

--
-- Name: integration integration DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "integration DELETE" ON public.integration FOR DELETE USING ((for_user = (public.current_rsn_user_id())::text));


--
-- Name: integration integration INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "integration INSERT" ON public.integration FOR INSERT WITH CHECK ((for_user = (public.current_rsn_user_id())::text));


--
-- Name: integration integration SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "integration SELECT" ON public.integration FOR SELECT USING ((for_user = (public.current_rsn_user_id())::text));


--
-- Name: integration integration UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "integration UPDATE" ON public.integration FOR UPDATE USING ((for_user = (public.current_rsn_user_id())::text));


--
-- Name: TABLE integration; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.integration TO anon;
GRANT ALL ON TABLE public.integration TO authenticated;
GRANT ALL ON TABLE public.integration TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.integration)
---------------------------------------------------------------------------

