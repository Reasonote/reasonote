---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.operation_log

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.operation_log)
------------------------------
--                                                Table "public.operation_log"
--      Column      |               Type                | Collation | Nullable |                   Default                    
-- -----------------+-----------------------------------+-----------+----------+----------------------------------------------
--  id              | uuid                              |           | not null | uuid_generate_v4()
--  table_name      | text                              |           |          | 
--  trigger_name    | text                              |           |          | 
--  operation_when  | text                              |           |          | 
--  operation_type  | text                              |           |          | 
--  operation_level | text                              |           |          | 
--  entity_id       | text                              |           |          | 
--  jsonb_diff      | jsonb                             |           |          | 
--  rsn_user_id     | text                              |           |          | current_rsn_user_id()
--  event_date      | timestamp without time zone       |           | not null | (now() AT TIME ZONE 'utc'::text)
--  process_status  | operation_log_process_status_enum |           |          | 'pending'::operation_log_process_status_enum
--  processed_date  | timestamp without time zone       |           |          | 
-- Indexes:
--     "operation_log_pkey" PRIMARY KEY, btree (id)
-- Policies (row security enabled): (none)
-- Triggers:
--     tgr_oplog_webhook AFTER INSERT ON operation_log FOR EACH ROW EXECUTE FUNCTION tgr_oplog_webhook()
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.operation_log)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.operation_log)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: operation_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.operation_log (
    id uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    table_name text,
    trigger_name text,
    operation_when text,
    operation_type text,
    operation_level text,
    entity_id text,
    jsonb_diff jsonb,
    rsn_user_id text DEFAULT public.current_rsn_user_id(),
    event_date timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    process_status public.operation_log_process_status_enum DEFAULT 'pending'::public.operation_log_process_status_enum,
    processed_date timestamp without time zone
);


ALTER TABLE public.operation_log OWNER TO postgres;

--
-- Name: TABLE operation_log; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.operation_log IS '@graphql({"totalCount": {"enabled": true}})';


--
-- Name: COLUMN operation_log.table_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.operation_log.table_name IS 'The name of the table the trigger was run on. Default value will be pulled from the TG_TABLE_NAME value when running the tgr_log_operation trigger.';


--
-- Name: COLUMN operation_log.trigger_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.operation_log.trigger_name IS 'The name of the trigger that was run to populate the record. Default value will be log_operation otherwise the value should be pulled from TG_NAME.';


--
-- Name: COLUMN operation_log.operation_when; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.operation_log.operation_when IS 'The value for when the trigger was run. Possible values will be BEFORE, AFTER, or INSTEAD OF';


--
-- Name: COLUMN operation_log.operation_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.operation_log.operation_type IS 'The type of operation. Possible values will be INSERT, UPDATE, DELETE, or TRUNCATE';


--
-- Name: COLUMN operation_log.operation_level; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.operation_log.operation_level IS 'The trigger operations level. Possible values will be ROW or STATEMENT';


--
-- Name: COLUMN operation_log.entity_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.operation_log.entity_id IS 'The id of the entity that was affected by the operation. Using this id along with the table name should allow you to find the record that was changed. If the record was delete this id will be the id of the deleted record.';


--
-- Name: COLUMN operation_log.jsonb_diff; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.operation_log.jsonb_diff IS 'A jsonb representation of the difference between the new record and the old record. On insert this will be the full record that was inserted and on delete this value will be null.';


--
-- Name: COLUMN operation_log.rsn_user_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.operation_log.rsn_user_id IS 'A foreign key constraint was intentionally left off this column to allow us to keep records around even after a user is removed from our database.';


--
-- Name: COLUMN operation_log.event_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.operation_log.event_date IS 'The date time when action to place.';


--
-- Name: operation_log operation_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.operation_log
    ADD CONSTRAINT operation_log_pkey PRIMARY KEY (id);


--
-- Name: operation_log tgr_oplog_webhook; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tgr_oplog_webhook AFTER INSERT ON public.operation_log FOR EACH ROW EXECUTE FUNCTION public.tgr_oplog_webhook();


--
-- Name: operation_log; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.operation_log ENABLE ROW LEVEL SECURITY;

--
-- Name: TABLE operation_log; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.operation_log TO anon;
GRANT ALL ON TABLE public.operation_log TO authenticated;
GRANT ALL ON TABLE public.operation_log TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.operation_log)
---------------------------------------------------------------------------

