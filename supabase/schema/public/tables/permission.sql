---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.permission

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.permission)
------------------------------
--                                         Table "public.permission"
--      Column      |            Type             | Collation | Nullable |             Default              
-- -----------------+-----------------------------+-----------+----------+----------------------------------
--  permission_code | character varying(512)      |           | not null | 
--  description     | text                        |           |          | 
--  created_by      | text                        |           |          | current_rsn_user_id()
--  created_date    | timestamp without time zone |           | not null | (now() AT TIME ZONE 'utc'::text)
--  updated_by      | text                        |           |          | current_rsn_user_id()
--  updated_date    | timestamp without time zone |           | not null | (now() AT TIME ZONE 'utc'::text)
-- Indexes:
--     "permission_pkey" PRIMARY KEY, btree (permission_code)
-- Referenced by:
--     TABLE "access_level_permission" CONSTRAINT "permission_code_fkey" FOREIGN KEY (permission_code) REFERENCES permission(permission_code)
-- Policies:
--     POLICY "permission DELETE" FOR DELETE
--       USING (false)
--     POLICY "permission INSERT" FOR INSERT
--       WITH CHECK (false)
--     POLICY "permission SELECT" FOR SELECT
--       USING (true)
--     POLICY "permission UPDATE" FOR UPDATE
--       USING (false)
-- Triggers:
--     log_operation AFTER INSERT OR DELETE OR UPDATE ON permission FOR EACH ROW EXECUTE FUNCTION tgr_log_operation()
--     run_tgr_apply_audit BEFORE INSERT OR UPDATE ON permission FOR EACH ROW EXECUTE FUNCTION tgr_apply_audit()
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.permission)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.permission)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.permission (
    permission_code character varying(512) NOT NULL,
    description text,
    created_by text DEFAULT public.current_rsn_user_id(),
    created_date timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    updated_by text DEFAULT public.current_rsn_user_id(),
    updated_date timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL
);


ALTER TABLE public.permission OWNER TO postgres;

--
-- Name: TABLE permission; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.permission IS 'Stores individual permission codes that can be granted via access levels.';


--
-- Name: permission permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permission
    ADD CONSTRAINT permission_pkey PRIMARY KEY (permission_code);


--
-- Name: permission log_operation; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER log_operation AFTER INSERT OR DELETE OR UPDATE ON public.permission FOR EACH ROW EXECUTE FUNCTION public.tgr_log_operation();


--
-- Name: permission run_tgr_apply_audit; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER run_tgr_apply_audit BEFORE INSERT OR UPDATE ON public.permission FOR EACH ROW EXECUTE FUNCTION public.tgr_apply_audit();


--
-- Name: permission; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.permission ENABLE ROW LEVEL SECURITY;

--
-- Name: permission permission DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "permission DELETE" ON public.permission FOR DELETE USING (false);


--
-- Name: permission permission INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "permission INSERT" ON public.permission FOR INSERT WITH CHECK (false);


--
-- Name: permission permission SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "permission SELECT" ON public.permission FOR SELECT USING (true);


--
-- Name: permission permission UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "permission UPDATE" ON public.permission FOR UPDATE USING (false);


--
-- Name: TABLE permission; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.permission TO anon;
GRANT ALL ON TABLE public.permission TO authenticated;
GRANT ALL ON TABLE public.permission TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.permission)
---------------------------------------------------------------------------

