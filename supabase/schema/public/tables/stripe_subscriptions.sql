---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.stripe_subscriptions

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.stripe_subscriptions)
------------------------------
--                                                                       Table "public.stripe_subscriptions"
--         Column        |            Type             | Collation | Nullable |                                              Default                                               
-- ----------------------+-----------------------------+-----------+----------+----------------------------------------------------------------------------------------------------
--  id                   | text                        |           | not null | 
--  customer             | text                        |           |          | 
--  currency             | text                        |           |          | 
--  items                | jsonb                       |           |          | 
--  current_period_start | timestamp without time zone |           |          | 
--  current_period_end   | timestamp without time zone |           |          | 
--  attrs                | jsonb                       |           |          | 
--  stripe_product_id    | text                        |           |          | generated always as ((((items -> 'data'::text) -> 0) -> 'price'::text) ->> 'product'::text) stored
--  canceled_at          | timestamp without time zone |           |          | 
--  cancellation_reason  | text                        |           |          | 
--  status               | text                        |           |          | 
-- Indexes:
--     "stripe_subscriptions_pkey" PRIMARY KEY, btree (id)
--     "idx_stripe_subscriptions_status" btree (status)
-- Policies:
--     POLICY "stripe_subscriptions DELETE" FOR DELETE
--       USING ((auth.role() = 'service_role'::text))
--     POLICY "stripe_subscriptions INSERT" FOR INSERT
--       WITH CHECK ((auth.role() = 'service_role'::text))
--     POLICY "stripe_subscriptions SELECT" FOR SELECT
--       USING (((auth.role() = 'service_role'::text) OR (cur_user_stripe_customer_id() = customer)))
--     POLICY "stripe_subscriptions UPDATE" FOR UPDATE
--       USING ((auth.role() = 'service_role'::text))
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.stripe_subscriptions)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.stripe_subscriptions)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: stripe_subscriptions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.stripe_subscriptions (
    id text NOT NULL,
    customer text,
    currency text,
    items jsonb,
    current_period_start timestamp without time zone,
    current_period_end timestamp without time zone,
    attrs jsonb,
    stripe_product_id text GENERATED ALWAYS AS (((((items -> 'data'::text) -> 0) -> 'price'::text) ->> 'product'::text)) STORED,
    canceled_at timestamp without time zone,
    cancellation_reason text,
    status text
);


ALTER TABLE public.stripe_subscriptions OWNER TO postgres;

--
-- Name: stripe_subscriptions stripe_subscriptions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.stripe_subscriptions
    ADD CONSTRAINT stripe_subscriptions_pkey PRIMARY KEY (id);


--
-- Name: idx_stripe_subscriptions_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_stripe_subscriptions_status ON public.stripe_subscriptions USING btree (status);


--
-- Name: stripe_subscriptions; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.stripe_subscriptions ENABLE ROW LEVEL SECURITY;

--
-- Name: stripe_subscriptions stripe_subscriptions DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "stripe_subscriptions DELETE" ON public.stripe_subscriptions FOR DELETE USING ((auth.role() = 'service_role'::text));


--
-- Name: stripe_subscriptions stripe_subscriptions INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "stripe_subscriptions INSERT" ON public.stripe_subscriptions FOR INSERT WITH CHECK ((auth.role() = 'service_role'::text));


--
-- Name: stripe_subscriptions stripe_subscriptions SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "stripe_subscriptions SELECT" ON public.stripe_subscriptions FOR SELECT USING (((auth.role() = 'service_role'::text) OR (public.cur_user_stripe_customer_id() = customer)));


--
-- Name: stripe_subscriptions stripe_subscriptions UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "stripe_subscriptions UPDATE" ON public.stripe_subscriptions FOR UPDATE USING ((auth.role() = 'service_role'::text));


--
-- Name: TABLE stripe_subscriptions; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.stripe_subscriptions TO anon;
GRANT ALL ON TABLE public.stripe_subscriptions TO authenticated;
GRANT ALL ON TABLE public.stripe_subscriptions TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.stripe_subscriptions)
---------------------------------------------------------------------------

