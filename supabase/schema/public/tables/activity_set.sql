---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.activity_set

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.activity_set)
------------------------------
--                                        Table "public.activity_set"
--     Column    |           Type           | Collation | Nullable |                Default                 
-- --------------+--------------------------+-----------+----------+----------------------------------------
--  id           | text                     |           | not null | generate_typed_uuid('actvtyset'::text)
--  _name        | text                     |           |          | 
--  for_user     | text                     |           |          | 
--  _description | text                     |           |          | 
--  metadata     | jsonb                    |           |          | 
--  created_date | timestamp with time zone |           | not null | now()
--  updated_date | timestamp with time zone |           | not null | now()
--  created_by   | text                     |           |          | 
--  updated_by   | text                     |           |          | 
-- Indexes:
--     "activity_set_pkey" PRIMARY KEY, btree (id)
-- Check constraints:
--     "activity_set_id_check" CHECK (is_valid_typed_uuid('actvtyset'::text, id::typed_uuid))
-- Foreign-key constraints:
--     "activity_set_created_by_fkey" FOREIGN KEY (created_by) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "activity_set_for_user_fkey" FOREIGN KEY (for_user) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "activity_set_updated_by_fkey" FOREIGN KEY (updated_by) REFERENCES rsn_user(id) ON DELETE SET NULL
-- Referenced by:
--     TABLE "activity_set_activity" CONSTRAINT "activity_set_activity_activity_set_fkey" FOREIGN KEY (activity_set) REFERENCES activity_set(id) ON DELETE CASCADE
-- Policies:
--     POLICY "activity_set DELETE" FOR DELETE
--       USING (true)
--     POLICY "activity_set INSERT" FOR INSERT
--       WITH CHECK (true)
--     POLICY "activity_set SELECT" FOR SELECT
--       USING (true)
--     POLICY "activity_set UPDATE" FOR UPDATE
--       USING (true)
-- Triggers:
--     log_operation AFTER INSERT OR DELETE OR UPDATE ON activity_set FOR EACH ROW EXECUTE FUNCTION tgr_log_operation()
--     run_tgr_apply_audit BEFORE INSERT OR UPDATE ON activity_set FOR EACH ROW EXECUTE FUNCTION tgr_apply_audit()
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.activity_set)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.activity_set)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: activity_set; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.activity_set (
    id text DEFAULT public.generate_typed_uuid('actvtyset'::text) NOT NULL,
    _name text,
    for_user text,
    _description text,
    metadata jsonb,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    updated_date timestamp with time zone DEFAULT now() NOT NULL,
    created_by text,
    updated_by text,
    CONSTRAINT activity_set_id_check CHECK (public.is_valid_typed_uuid('actvtyset'::text, (id)::public.typed_uuid))
);


ALTER TABLE public.activity_set OWNER TO postgres;

--
-- Name: TABLE activity_set; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.activity_set IS 'A set of activities.';


--
-- Name: COLUMN activity_set.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_set.id IS 'The unique identifier for the activity set.';


--
-- Name: COLUMN activity_set._name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_set._name IS 'The name of the activity set.';


--
-- Name: COLUMN activity_set.for_user; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_set.for_user IS 'The user that this activity set is for.';


--
-- Name: COLUMN activity_set._description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_set._description IS 'The description of the activity set.';


--
-- Name: COLUMN activity_set.metadata; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_set.metadata IS 'The metadata for the activity set.';


--
-- Name: COLUMN activity_set.created_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_set.created_date IS 'The date that this activity set was created.';


--
-- Name: COLUMN activity_set.updated_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_set.updated_date IS 'The date that this activity set was last updated.';


--
-- Name: COLUMN activity_set.created_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_set.created_by IS 'The user that created this activity set.';


--
-- Name: COLUMN activity_set.updated_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_set.updated_by IS 'The user that last updated this activity set.';


--
-- Name: activity_set activity_set_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.activity_set
    ADD CONSTRAINT activity_set_pkey PRIMARY KEY (id);


--
-- Name: activity_set log_operation; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER log_operation AFTER INSERT OR DELETE OR UPDATE ON public.activity_set FOR EACH ROW EXECUTE FUNCTION public.tgr_log_operation();


--
-- Name: activity_set run_tgr_apply_audit; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER run_tgr_apply_audit BEFORE INSERT OR UPDATE ON public.activity_set FOR EACH ROW EXECUTE FUNCTION public.tgr_apply_audit();


--
-- Name: activity_set activity_set_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.activity_set
    ADD CONSTRAINT activity_set_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: activity_set activity_set_for_user_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.activity_set
    ADD CONSTRAINT activity_set_for_user_fkey FOREIGN KEY (for_user) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: activity_set activity_set_updated_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.activity_set
    ADD CONSTRAINT activity_set_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: activity_set; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.activity_set ENABLE ROW LEVEL SECURITY;

--
-- Name: activity_set activity_set DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "activity_set DELETE" ON public.activity_set FOR DELETE USING (true);


--
-- Name: activity_set activity_set INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "activity_set INSERT" ON public.activity_set FOR INSERT WITH CHECK (true);


--
-- Name: activity_set activity_set SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "activity_set SELECT" ON public.activity_set FOR SELECT USING (true);


--
-- Name: activity_set activity_set UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "activity_set UPDATE" ON public.activity_set FOR UPDATE USING (true);


--
-- Name: TABLE activity_set; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.activity_set TO anon;
GRANT ALL ON TABLE public.activity_set TO authenticated;
GRANT ALL ON TABLE public.activity_set TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.activity_set)
---------------------------------------------------------------------------

