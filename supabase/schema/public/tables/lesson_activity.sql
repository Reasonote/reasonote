---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.lesson_activity

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.lesson_activity)
------------------------------
--                                     Table "public.lesson_activity"
--     Column    |           Type           | Collation | Nullable |               Default               
-- --------------+--------------------------+-----------+----------+-------------------------------------
--  id           | text                     |           | not null | generate_typed_uuid('lsnact'::text)
--  lesson       | text                     |           |          | 
--  activity     | text                     |           |          | 
--  metadata     | jsonb                    |           |          | 
--  created_date | timestamp with time zone |           | not null | now()
--  updated_date | timestamp with time zone |           | not null | now()
--  created_by   | text                     |           |          | 
--  updated_by   | text                     |           |          | 
--  position     | double precision         |           | not null | 
-- Indexes:
--     "lesson_activity_pkey" PRIMARY KEY, btree (id)
--     "idx_lesson_activity_activity" btree (activity)
--     "idx_lesson_activity_created_by" btree (created_by)
--     "idx_lesson_activity_id" btree (id)
--     "idx_lesson_activity_lesson" btree (lesson)
--     "idx_lesson_activity_position" btree (lesson, "position")
--     "lesson_activity_lesson_position_key" UNIQUE CONSTRAINT, btree (lesson, "position")
-- Check constraints:
--     "lesson_activity_id_check" CHECK (is_valid_typed_uuid('lsnact'::text, id::typed_uuid))
-- Foreign-key constraints:
--     "lesson_activity_activity_fkey" FOREIGN KEY (activity) REFERENCES activity(id) ON DELETE CASCADE
--     "lesson_activity_created_by_fkey" FOREIGN KEY (created_by) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "lesson_activity_lesson_fkey" FOREIGN KEY (lesson) REFERENCES lesson(id) ON DELETE CASCADE
--     "lesson_activity_updated_by_fkey" FOREIGN KEY (updated_by) REFERENCES rsn_user(id) ON DELETE SET NULL
-- Policies:
--     POLICY "lesson_activity DELETE" FOR DELETE
--       USING (((created_by = (current_rsn_user_id())::text) OR is_admin()))
--     POLICY "lesson_activity INSERT" FOR INSERT
--       WITH CHECK (((created_by = (current_rsn_user_id())::text) OR is_admin()))
--     POLICY "lesson_activity SELECT" FOR SELECT
--       USING (((created_by = (current_rsn_user_id())::text) OR is_admin()))
--     POLICY "lesson_activity UPDATE" FOR UPDATE
--       USING (((created_by = (current_rsn_user_id())::text) OR is_admin()))
-- Triggers:
--     log_operation AFTER INSERT OR DELETE OR UPDATE ON lesson_activity FOR EACH ROW EXECUTE FUNCTION tgr_log_operation()
--     run_tgr_apply_audit BEFORE INSERT OR UPDATE ON lesson_activity FOR EACH ROW EXECUTE FUNCTION tgr_apply_audit()
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.lesson_activity)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.lesson_activity)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: lesson_activity; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lesson_activity (
    id text DEFAULT public.generate_typed_uuid('lsnact'::text) NOT NULL,
    lesson text,
    activity text,
    metadata jsonb,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    updated_date timestamp with time zone DEFAULT now() NOT NULL,
    created_by text,
    updated_by text,
    "position" double precision NOT NULL,
    CONSTRAINT lesson_activity_id_check CHECK (public.is_valid_typed_uuid('lsnact'::text, (id)::public.typed_uuid))
);


ALTER TABLE public.lesson_activity OWNER TO postgres;

--
-- Name: TABLE lesson_activity; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.lesson_activity IS 'The link between an lesson and an activity.';


--
-- Name: COLUMN lesson_activity.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_activity.id IS 'The unique identifier for the lesson activity.';


--
-- Name: COLUMN lesson_activity.lesson; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_activity.lesson IS 'The corresponding lesson.';


--
-- Name: COLUMN lesson_activity.activity; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_activity.activity IS 'The activity.';


--
-- Name: COLUMN lesson_activity.metadata; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_activity.metadata IS 'The metadata for the lesson activity.';


--
-- Name: COLUMN lesson_activity.created_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_activity.created_date IS 'The date that this lesson activity was created.';


--
-- Name: COLUMN lesson_activity.updated_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_activity.updated_date IS 'The date that this lesson activity was last updated.';


--
-- Name: COLUMN lesson_activity.created_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_activity.created_by IS 'The user that created this lesson activity.';


--
-- Name: COLUMN lesson_activity.updated_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_activity.updated_by IS 'The user that last updated this lesson activity.';


--
-- Name: COLUMN lesson_activity."position"; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.lesson_activity."position" IS 'The position of this activity within the lesson.';


--
-- Name: lesson_activity lesson_activity_lesson_position_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lesson_activity
    ADD CONSTRAINT lesson_activity_lesson_position_key UNIQUE (lesson, "position");


--
-- Name: lesson_activity lesson_activity_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lesson_activity
    ADD CONSTRAINT lesson_activity_pkey PRIMARY KEY (id);


--
-- Name: idx_lesson_activity_activity; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_lesson_activity_activity ON public.lesson_activity USING btree (activity);


--
-- Name: idx_lesson_activity_created_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_lesson_activity_created_by ON public.lesson_activity USING btree (created_by);


--
-- Name: idx_lesson_activity_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_lesson_activity_id ON public.lesson_activity USING btree (id);


--
-- Name: idx_lesson_activity_lesson; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_lesson_activity_lesson ON public.lesson_activity USING btree (lesson);


--
-- Name: idx_lesson_activity_position; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_lesson_activity_position ON public.lesson_activity USING btree (lesson, "position");


--
-- Name: lesson_activity log_operation; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER log_operation AFTER INSERT OR DELETE OR UPDATE ON public.lesson_activity FOR EACH ROW EXECUTE FUNCTION public.tgr_log_operation();


--
-- Name: lesson_activity run_tgr_apply_audit; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER run_tgr_apply_audit BEFORE INSERT OR UPDATE ON public.lesson_activity FOR EACH ROW EXECUTE FUNCTION public.tgr_apply_audit();


--
-- Name: lesson_activity lesson_activity_activity_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lesson_activity
    ADD CONSTRAINT lesson_activity_activity_fkey FOREIGN KEY (activity) REFERENCES public.activity(id) ON DELETE CASCADE;


--
-- Name: lesson_activity lesson_activity_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lesson_activity
    ADD CONSTRAINT lesson_activity_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: lesson_activity lesson_activity_lesson_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lesson_activity
    ADD CONSTRAINT lesson_activity_lesson_fkey FOREIGN KEY (lesson) REFERENCES public.lesson(id) ON DELETE CASCADE;


--
-- Name: lesson_activity lesson_activity_updated_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lesson_activity
    ADD CONSTRAINT lesson_activity_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: lesson_activity; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.lesson_activity ENABLE ROW LEVEL SECURITY;

--
-- Name: lesson_activity lesson_activity DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "lesson_activity DELETE" ON public.lesson_activity FOR DELETE USING (((created_by = (public.current_rsn_user_id())::text) OR public.is_admin()));


--
-- Name: lesson_activity lesson_activity INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "lesson_activity INSERT" ON public.lesson_activity FOR INSERT WITH CHECK (((created_by = (public.current_rsn_user_id())::text) OR public.is_admin()));


--
-- Name: lesson_activity lesson_activity SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "lesson_activity SELECT" ON public.lesson_activity FOR SELECT USING (((created_by = (public.current_rsn_user_id())::text) OR public.is_admin()));


--
-- Name: lesson_activity lesson_activity UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "lesson_activity UPDATE" ON public.lesson_activity FOR UPDATE USING (((created_by = (public.current_rsn_user_id())::text) OR public.is_admin()));


--
-- Name: TABLE lesson_activity; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.lesson_activity TO anon;
GRANT ALL ON TABLE public.lesson_activity TO authenticated;
GRANT ALL ON TABLE public.lesson_activity TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.lesson_activity)
---------------------------------------------------------------------------

