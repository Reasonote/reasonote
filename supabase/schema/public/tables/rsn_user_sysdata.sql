---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.rsn_user_sysdata

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.rsn_user_sysdata)
------------------------------
--                                                            Table "public.rsn_user_sysdata"
--              Column             |           Type           | Collation | Nullable |                             Default                              
-- --------------------------------+--------------------------+-----------+----------+------------------------------------------------------------------
--  id                             | text                     |           | not null | generated always as ('rsnusrsys_'::text || auth_id::text) stored
--  rsn_user_id                    | text                     |           |          | generated always as ('rsnusr_'::text || auth_id::text) stored
--  auth_id                        | uuid                     |           | not null | 
--  extra_license_info             | jsonb                    |           |          | 
--  auth_email                     | text                     |           |          | 
--  has_onboarded                  | boolean                  |           |          | false
--  daily_xp_goal_celebration_time | timestamp with time zone |           |          | 
-- Indexes:
--     "rsn_user_sysdata_pkey" PRIMARY KEY, btree (id)
--     "idx_rsn_user_sysdata_auth_id" btree (auth_id)
-- Check constraints:
--     "rsn_user_sysdata__id__check_prefix" CHECK (is_valid_typed_uuid('rsnusrsys'::text, id::typed_uuid))
--     "rsn_user_sysdata__rsn_user_id__check_prefix" CHECK (is_valid_typed_uuid('rsnusr'::text, rsn_user_id::typed_uuid))
-- Foreign-key constraints:
--     "rsn_user_sysdata_auth_id_fkey" FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON DELETE CASCADE
-- Policies:
--     POLICY "rsn_user_sysdata DELETE" FOR DELETE
--       USING ((is_admin() OR ((current_rsn_user_id())::text = rsn_user_id)))
--     POLICY "rsn_user_sysdata INSERT" FOR INSERT
--       WITH CHECK (is_admin())
--     POLICY "rsn_user_sysdata SELECT" FOR SELECT
--       USING ((is_admin() OR ((current_rsn_user_id())::text = rsn_user_id)))
--     POLICY "rsn_user_sysdata UPDATE" FOR UPDATE
--       USING (is_admin())
-- Triggers:
--     run_tgr_user_auth_sync BEFORE INSERT OR UPDATE ON rsn_user_sysdata FOR EACH ROW EXECUTE FUNCTION tgr_user_auth_sync()
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.rsn_user_sysdata)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.rsn_user_sysdata)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: rsn_user_sysdata; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rsn_user_sysdata (
    id text GENERATED ALWAYS AS (('rsnusrsys_'::text || (auth_id)::text)) STORED NOT NULL,
    rsn_user_id text GENERATED ALWAYS AS (('rsnusr_'::text || (auth_id)::text)) STORED,
    auth_id uuid NOT NULL,
    extra_license_info jsonb,
    auth_email text,
    has_onboarded boolean DEFAULT false,
    daily_xp_goal_celebration_time timestamp with time zone,
    CONSTRAINT rsn_user_sysdata__id__check_prefix CHECK (public.is_valid_typed_uuid('rsnusrsys'::text, (id)::public.typed_uuid)),
    CONSTRAINT rsn_user_sysdata__rsn_user_id__check_prefix CHECK (public.is_valid_typed_uuid('rsnusr'::text, (rsn_user_id)::public.typed_uuid))
);


ALTER TABLE public.rsn_user_sysdata OWNER TO postgres;

--
-- Name: rsn_user_sysdata rsn_user_sysdata_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rsn_user_sysdata
    ADD CONSTRAINT rsn_user_sysdata_pkey PRIMARY KEY (id);


--
-- Name: idx_rsn_user_sysdata_auth_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_rsn_user_sysdata_auth_id ON public.rsn_user_sysdata USING btree (auth_id);


--
-- Name: rsn_user_sysdata run_tgr_user_auth_sync; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER run_tgr_user_auth_sync BEFORE INSERT OR UPDATE ON public.rsn_user_sysdata FOR EACH ROW EXECUTE FUNCTION public.tgr_user_auth_sync();


--
-- Name: rsn_user_sysdata rsn_user_sysdata_auth_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rsn_user_sysdata
    ADD CONSTRAINT rsn_user_sysdata_auth_id_fkey FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: rsn_user_sysdata; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.rsn_user_sysdata ENABLE ROW LEVEL SECURITY;

--
-- Name: rsn_user_sysdata rsn_user_sysdata DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "rsn_user_sysdata DELETE" ON public.rsn_user_sysdata FOR DELETE USING ((public.is_admin() OR ((public.current_rsn_user_id())::text = rsn_user_id)));


--
-- Name: rsn_user_sysdata rsn_user_sysdata INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "rsn_user_sysdata INSERT" ON public.rsn_user_sysdata FOR INSERT WITH CHECK (public.is_admin());


--
-- Name: rsn_user_sysdata rsn_user_sysdata SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "rsn_user_sysdata SELECT" ON public.rsn_user_sysdata FOR SELECT USING ((public.is_admin() OR ((public.current_rsn_user_id())::text = rsn_user_id)));


--
-- Name: rsn_user_sysdata rsn_user_sysdata UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "rsn_user_sysdata UPDATE" ON public.rsn_user_sysdata FOR UPDATE USING (public.is_admin());


--
-- Name: TABLE rsn_user_sysdata; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.rsn_user_sysdata TO anon;
GRANT ALL ON TABLE public.rsn_user_sysdata TO authenticated;
GRANT ALL ON TABLE public.rsn_user_sysdata TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.rsn_user_sysdata)
---------------------------------------------------------------------------

