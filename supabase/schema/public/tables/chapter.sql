---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.chapter

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.chapter)
------------------------------
--                                           Table "public.chapter"
--       Column      |           Type           | Collation | Nullable |               Default                
-- ------------------+--------------------------+-----------+----------+--------------------------------------
--  id               | text                     |           | not null | generate_typed_uuid('chapter'::text)
--  icon             | text                     |           |          | 
--  _name            | text                     |           | not null | 
--  _summary         | text                     |           |          | 
--  for_user         | text                     |           |          | 
--  metadata         | jsonb                    |           |          | 
--  root_skill       | text                     |           | not null | 
--  root_skill_order | integer                  |           |          | 
--  root_skill_path  | text[]                   |           |          | 
--  created_date     | timestamp with time zone |           | not null | now()
--  updated_date     | timestamp with time zone |           | not null | now()
--  created_by       | text                     |           |          | 
--  updated_by       | text                     |           |          | 
-- Indexes:
--     "chapter_pkey" PRIMARY KEY, btree (id)
-- Check constraints:
--     "chapter_id_check" CHECK (is_valid_typed_uuid('chapter'::text, id::typed_uuid))
-- Foreign-key constraints:
--     "chapter_created_by_fkey" FOREIGN KEY (created_by) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "chapter_for_user_fkey" FOREIGN KEY (for_user) REFERENCES rsn_user(id)
--     "chapter_root_skill_fkey" FOREIGN KEY (root_skill) REFERENCES skill(id) ON DELETE CASCADE
--     "chapter_updated_by_fkey" FOREIGN KEY (updated_by) REFERENCES rsn_user(id) ON DELETE SET NULL
-- Referenced by:
--     TABLE "lesson" CONSTRAINT "lesson_chapter_fkey" FOREIGN KEY (chapter) REFERENCES chapter(id) ON DELETE SET NULL
--     TABLE "user_skill" CONSTRAINT "user_skill_current_chapter_fkey" FOREIGN KEY (current_chapter) REFERENCES chapter(id) ON DELETE SET NULL
-- Policies:
--     POLICY "chapter DELETE" FOR DELETE
--       USING ((((current_rsn_user_id())::text = created_by) OR ((current_rsn_user_id())::text = for_user)))
--     POLICY "chapter INSERT" FOR INSERT
--       WITH CHECK ((((current_rsn_user_id())::text = created_by) OR ((current_rsn_user_id())::text = for_user)))
--     POLICY "chapter SELECT" FOR SELECT
--       USING ((((current_rsn_user_id())::text = created_by) OR ((current_rsn_user_id())::text = for_user)))
--     POLICY "chapter UPDATE" FOR UPDATE
--       USING ((((current_rsn_user_id())::text = created_by) OR ((current_rsn_user_id())::text = for_user)))
-- Triggers:
--     log_operation AFTER INSERT OR DELETE OR UPDATE ON chapter FOR EACH ROW EXECUTE FUNCTION tgr_log_operation()
--     run_tgr_apply_audit BEFORE INSERT OR UPDATE ON chapter FOR EACH ROW EXECUTE FUNCTION tgr_apply_audit()
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.chapter)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.chapter)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: chapter; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.chapter (
    id text DEFAULT public.generate_typed_uuid('chapter'::text) NOT NULL,
    icon text,
    _name text NOT NULL,
    _summary text,
    for_user text,
    metadata jsonb,
    root_skill text NOT NULL,
    root_skill_order integer,
    root_skill_path text[],
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    updated_date timestamp with time zone DEFAULT now() NOT NULL,
    created_by text,
    updated_by text,
    CONSTRAINT chapter_id_check CHECK (public.is_valid_typed_uuid('chapter'::text, (id)::public.typed_uuid))
);


ALTER TABLE public.chapter OWNER TO postgres;

--
-- Name: TABLE chapter; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.chapter IS 'A chapter is a group of skills, activities, and configuration for a specific learning goal..';


--
-- Name: COLUMN chapter.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chapter.id IS 'The unique identifier for the chapter.';


--
-- Name: COLUMN chapter._name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chapter._name IS 'The name of the chapter.';


--
-- Name: COLUMN chapter._summary; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chapter._summary IS 'The summary of the chapter.';


--
-- Name: COLUMN chapter.metadata; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chapter.metadata IS 'The metadata for the chapter.';


--
-- Name: COLUMN chapter.created_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chapter.created_date IS 'The date that this chapter was created.';


--
-- Name: COLUMN chapter.updated_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chapter.updated_date IS 'The date that this chapter was last updated.';


--
-- Name: COLUMN chapter.created_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chapter.created_by IS 'The user that created this chapter.';


--
-- Name: COLUMN chapter.updated_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.chapter.updated_by IS 'The user that last updated this chapter.';


--
-- Name: chapter chapter_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chapter
    ADD CONSTRAINT chapter_pkey PRIMARY KEY (id);


--
-- Name: chapter log_operation; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER log_operation AFTER INSERT OR DELETE OR UPDATE ON public.chapter FOR EACH ROW EXECUTE FUNCTION public.tgr_log_operation();


--
-- Name: chapter run_tgr_apply_audit; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER run_tgr_apply_audit BEFORE INSERT OR UPDATE ON public.chapter FOR EACH ROW EXECUTE FUNCTION public.tgr_apply_audit();


--
-- Name: chapter chapter_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chapter
    ADD CONSTRAINT chapter_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: chapter chapter_for_user_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chapter
    ADD CONSTRAINT chapter_for_user_fkey FOREIGN KEY (for_user) REFERENCES public.rsn_user(id);


--
-- Name: chapter chapter_root_skill_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chapter
    ADD CONSTRAINT chapter_root_skill_fkey FOREIGN KEY (root_skill) REFERENCES public.skill(id) ON DELETE CASCADE;


--
-- Name: chapter chapter_updated_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chapter
    ADD CONSTRAINT chapter_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: chapter; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.chapter ENABLE ROW LEVEL SECURITY;

--
-- Name: chapter chapter DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "chapter DELETE" ON public.chapter FOR DELETE USING ((((public.current_rsn_user_id())::text = created_by) OR ((public.current_rsn_user_id())::text = for_user)));


--
-- Name: chapter chapter INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "chapter INSERT" ON public.chapter FOR INSERT WITH CHECK ((((public.current_rsn_user_id())::text = created_by) OR ((public.current_rsn_user_id())::text = for_user)));


--
-- Name: chapter chapter SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "chapter SELECT" ON public.chapter FOR SELECT USING ((((public.current_rsn_user_id())::text = created_by) OR ((public.current_rsn_user_id())::text = for_user)));


--
-- Name: chapter chapter UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "chapter UPDATE" ON public.chapter FOR UPDATE USING ((((public.current_rsn_user_id())::text = created_by) OR ((public.current_rsn_user_id())::text = for_user)));


--
-- Name: TABLE chapter; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.chapter TO anon;
GRANT ALL ON TABLE public.chapter TO authenticated;
GRANT ALL ON TABLE public.chapter TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.chapter)
---------------------------------------------------------------------------

