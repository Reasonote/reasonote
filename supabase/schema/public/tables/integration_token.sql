---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.integration_token

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.integration_token)
------------------------------
--                                       Table "public.integration_token"
--      Column     |           Type           | Collation | Nullable |                 Default                 
-- ----------------+--------------------------+-----------+----------+-----------------------------------------
--  id             | text                     |           | not null | generate_typed_uuid('intgrtntkn'::text)
--  integration_id | typed_uuid               |           | not null | 
--  token          | text                     |           | not null | 
--  metadata       | jsonb                    |           |          | 
--  created_date   | timestamp with time zone |           | not null | now()
--  updated_date   | timestamp with time zone |           | not null | now()
--  created_by     | typed_uuid               |           |          | 
--  updated_by     | typed_uuid               |           |          | 
-- Indexes:
--     "integration_token_pkey" PRIMARY KEY, btree (id)
-- Check constraints:
--     "integration_token__id__check_prefix" CHECK (is_valid_typed_uuid('intgrtntkn'::text, id::typed_uuid))
-- Foreign-key constraints:
--     "integration_token_created_by_fkey" FOREIGN KEY (created_by) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "integration_token_integration_id_fkey" FOREIGN KEY (integration_id) REFERENCES integration(id) ON DELETE CASCADE
--     "integration_token_updated_by_fkey" FOREIGN KEY (updated_by) REFERENCES rsn_user(id) ON DELETE SET NULL
-- Policies:
--     POLICY "integration_token DELETE" FOR DELETE
--       USING ((( SELECT integration.for_user
--    FROM integration
--   WHERE (integration.id = (integration_token.integration_id)::text)) = (current_rsn_user_id())::text))
--     POLICY "integration_token INSERT" FOR INSERT
--       WITH CHECK ((( SELECT integration.for_user
--    FROM integration
--   WHERE (integration.id = (integration_token.integration_id)::text)) = (current_rsn_user_id())::text))
--     POLICY "integration_token SELECT" FOR SELECT
--       USING ((( SELECT integration.for_user
--    FROM integration
--   WHERE (integration.id = (integration_token.integration_id)::text)) = (current_rsn_user_id())::text))
--     POLICY "integration_token UPDATE" FOR UPDATE
--       USING ((( SELECT integration.for_user
--    FROM integration
--   WHERE (integration.id = (integration_token.integration_id)::text)) = (current_rsn_user_id())::text))
-- Triggers:
--     log_operation AFTER INSERT OR DELETE OR UPDATE ON integration_token FOR EACH ROW EXECUTE FUNCTION tgr_log_operation()
--     run_tgr_apply_audit BEFORE INSERT OR UPDATE ON integration_token FOR EACH ROW EXECUTE FUNCTION tgr_apply_audit()
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.integration_token)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.integration_token)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: integration_token; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.integration_token (
    id text DEFAULT public.generate_typed_uuid('intgrtntkn'::text) NOT NULL,
    integration_id public.typed_uuid NOT NULL,
    token text NOT NULL,
    metadata jsonb,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    updated_date timestamp with time zone DEFAULT now() NOT NULL,
    created_by public.typed_uuid,
    updated_by public.typed_uuid,
    CONSTRAINT integration_token__id__check_prefix CHECK (public.is_valid_typed_uuid('intgrtntkn'::text, (id)::public.typed_uuid))
);


ALTER TABLE public.integration_token OWNER TO postgres;

--
-- Name: integration_token integration_token_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.integration_token
    ADD CONSTRAINT integration_token_pkey PRIMARY KEY (id);


--
-- Name: integration_token log_operation; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER log_operation AFTER INSERT OR DELETE OR UPDATE ON public.integration_token FOR EACH ROW EXECUTE FUNCTION public.tgr_log_operation();


--
-- Name: integration_token run_tgr_apply_audit; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER run_tgr_apply_audit BEFORE INSERT OR UPDATE ON public.integration_token FOR EACH ROW EXECUTE FUNCTION public.tgr_apply_audit();


--
-- Name: integration_token integration_token_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.integration_token
    ADD CONSTRAINT integration_token_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: integration_token integration_token_integration_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.integration_token
    ADD CONSTRAINT integration_token_integration_id_fkey FOREIGN KEY (integration_id) REFERENCES public.integration(id) ON DELETE CASCADE;


--
-- Name: integration_token integration_token_updated_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.integration_token
    ADD CONSTRAINT integration_token_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: integration_token; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.integration_token ENABLE ROW LEVEL SECURITY;

--
-- Name: integration_token integration_token DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "integration_token DELETE" ON public.integration_token FOR DELETE USING ((( SELECT integration.for_user
   FROM public.integration
  WHERE (integration.id = (integration_token.integration_id)::text)) = (public.current_rsn_user_id())::text));


--
-- Name: integration_token integration_token INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "integration_token INSERT" ON public.integration_token FOR INSERT WITH CHECK ((( SELECT integration.for_user
   FROM public.integration
  WHERE (integration.id = (integration_token.integration_id)::text)) = (public.current_rsn_user_id())::text));


--
-- Name: integration_token integration_token SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "integration_token SELECT" ON public.integration_token FOR SELECT USING ((( SELECT integration.for_user
   FROM public.integration
  WHERE (integration.id = (integration_token.integration_id)::text)) = (public.current_rsn_user_id())::text));


--
-- Name: integration_token integration_token UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "integration_token UPDATE" ON public.integration_token FOR UPDATE USING ((( SELECT integration.for_user
   FROM public.integration
  WHERE (integration.id = (integration_token.integration_id)::text)) = (public.current_rsn_user_id())::text));


--
-- Name: TABLE integration_token; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.integration_token TO anon;
GRANT ALL ON TABLE public.integration_token TO authenticated;
GRANT ALL ON TABLE public.integration_token TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.integration_token)
---------------------------------------------------------------------------

