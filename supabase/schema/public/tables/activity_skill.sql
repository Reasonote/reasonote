---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.activity_skill

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.activity_skill)
------------------------------
--                                      Table "public.activity_skill"
--     Column    |           Type           | Collation | Nullable |               Default                
-- --------------+--------------------------+-----------+----------+--------------------------------------
--  id           | text                     |           | not null | generate_typed_uuid('actvskl'::text)
--  _type        | text                     |           |          | 
--  _weight      | double precision         |           |          | 
--  activity     | text                     |           |          | 
--  skill        | text                     |           |          | 
--  metadata     | jsonb                    |           |          | 
--  created_date | timestamp with time zone |           | not null | now()
--  updated_date | timestamp with time zone |           | not null | now()
--  created_by   | typed_uuid               |           |          | 
--  updated_by   | typed_uuid               |           |          | 
-- Indexes:
--     "activity_skill_pkey" PRIMARY KEY, btree (id)
-- Check constraints:
--     "activity_skill__id__check_prefix" CHECK (is_valid_typed_uuid('actvskl'::text, id::typed_uuid))
-- Foreign-key constraints:
--     "activity_skill_activity_fkey" FOREIGN KEY (activity) REFERENCES activity(id) ON DELETE CASCADE
--     "activity_skill_created_by_fkey" FOREIGN KEY (created_by) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "activity_skill_skill_fkey" FOREIGN KEY (skill) REFERENCES skill(id) ON DELETE CASCADE
--     "activity_skill_updated_by_fkey" FOREIGN KEY (updated_by) REFERENCES rsn_user(id) ON DELETE SET NULL
-- Policies:
--     POLICY "activity_skill DELETE" FOR DELETE
--       USING (true)
--     POLICY "activity_skill INSERT" FOR INSERT
--       WITH CHECK (true)
--     POLICY "activity_skill SELECT" FOR SELECT
--       USING (true)
--     POLICY "activity_skill UPDATE" FOR UPDATE
--       USING (true)
-- Triggers:
--     log_operation AFTER INSERT OR DELETE OR UPDATE ON activity_skill FOR EACH ROW EXECUTE FUNCTION tgr_log_operation()
--     run_tgr_apply_audit BEFORE INSERT OR UPDATE ON activity_skill FOR EACH ROW EXECUTE FUNCTION tgr_apply_audit()
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.activity_skill)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.activity_skill)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: activity_skill; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.activity_skill (
    id text DEFAULT public.generate_typed_uuid('actvskl'::text) NOT NULL,
    _type text,
    _weight double precision,
    activity text,
    skill text,
    metadata jsonb,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    updated_date timestamp with time zone DEFAULT now() NOT NULL,
    created_by public.typed_uuid,
    updated_by public.typed_uuid,
    CONSTRAINT activity_skill__id__check_prefix CHECK (public.is_valid_typed_uuid('actvskl'::text, (id)::public.typed_uuid))
);


ALTER TABLE public.activity_skill OWNER TO postgres;

--
-- Name: TABLE activity_skill; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.activity_skill IS 'A skill that is part of an activity';


--
-- Name: COLUMN activity_skill.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_skill.id IS 'The unique identifier for the activity skill';


--
-- Name: COLUMN activity_skill._type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_skill._type IS 'The type of the activity skill ("ai-generated" and "manual")';


--
-- Name: COLUMN activity_skill._weight; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_skill._weight IS 'The weight of the activity skill';


--
-- Name: COLUMN activity_skill.activity; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_skill.activity IS 'The activity that the skill is part of';


--
-- Name: COLUMN activity_skill.skill; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_skill.skill IS 'The skill that is part of the activity';


--
-- Name: COLUMN activity_skill.metadata; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_skill.metadata IS 'The metadata of the activity skill';


--
-- Name: COLUMN activity_skill.created_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_skill.created_date IS 'The date the activity skill was created';


--
-- Name: COLUMN activity_skill.updated_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_skill.updated_date IS 'The date the activity skill was last updated';


--
-- Name: COLUMN activity_skill.created_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_skill.created_by IS 'The user that created the activity skill';


--
-- Name: COLUMN activity_skill.updated_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.activity_skill.updated_by IS 'The user that last updated the activity skill';


--
-- Name: activity_skill activity_skill_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.activity_skill
    ADD CONSTRAINT activity_skill_pkey PRIMARY KEY (id);


--
-- Name: activity_skill log_operation; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER log_operation AFTER INSERT OR DELETE OR UPDATE ON public.activity_skill FOR EACH ROW EXECUTE FUNCTION public.tgr_log_operation();


--
-- Name: activity_skill run_tgr_apply_audit; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER run_tgr_apply_audit BEFORE INSERT OR UPDATE ON public.activity_skill FOR EACH ROW EXECUTE FUNCTION public.tgr_apply_audit();


--
-- Name: activity_skill activity_skill_activity_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.activity_skill
    ADD CONSTRAINT activity_skill_activity_fkey FOREIGN KEY (activity) REFERENCES public.activity(id) ON DELETE CASCADE;


--
-- Name: activity_skill activity_skill_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.activity_skill
    ADD CONSTRAINT activity_skill_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: activity_skill activity_skill_skill_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.activity_skill
    ADD CONSTRAINT activity_skill_skill_fkey FOREIGN KEY (skill) REFERENCES public.skill(id) ON DELETE CASCADE;


--
-- Name: activity_skill activity_skill_updated_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.activity_skill
    ADD CONSTRAINT activity_skill_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: activity_skill; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.activity_skill ENABLE ROW LEVEL SECURITY;

--
-- Name: activity_skill activity_skill DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "activity_skill DELETE" ON public.activity_skill FOR DELETE USING (true);


--
-- Name: activity_skill activity_skill INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "activity_skill INSERT" ON public.activity_skill FOR INSERT WITH CHECK (true);


--
-- Name: activity_skill activity_skill SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "activity_skill SELECT" ON public.activity_skill FOR SELECT USING (true);


--
-- Name: activity_skill activity_skill UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "activity_skill UPDATE" ON public.activity_skill FOR UPDATE USING (true);


--
-- Name: TABLE activity_skill; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.activity_skill TO anon;
GRANT ALL ON TABLE public.activity_skill TO authenticated;
GRANT ALL ON TABLE public.activity_skill TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.activity_skill)
---------------------------------------------------------------------------

