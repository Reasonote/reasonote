---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.skill_link

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.skill_link)
------------------------------
--                                          Table "public.skill_link"
--       Column      |           Type           | Collation | Nullable |               Default                
-- ------------------+--------------------------+-----------+----------+--------------------------------------
--  id               | text                     |           | not null | generate_typed_uuid('sklconn'::text)
--  _type            | text                     |           |          | 
--  _weight          | double precision         |           |          | 
--  downstream_skill | text                     |           |          | 
--  upstream_skill   | text                     |           |          | 
--  metadata         | jsonb                    |           |          | 
--  created_date     | timestamp with time zone |           | not null | now()
--  updated_date     | timestamp with time zone |           | not null | now()
--  created_by       | typed_uuid               |           |          | 
--  updated_by       | typed_uuid               |           |          | 
-- Indexes:
--     "skill_link_pkey" PRIMARY KEY, btree (id)
--     "skill_link_downstream_skill_upstream_skill_unique" UNIQUE CONSTRAINT, btree (downstream_skill, upstream_skill)
-- Check constraints:
--     "skill_link__id__check_prefix" CHECK (is_valid_typed_uuid('sklconn'::text, id::typed_uuid))
--     "skill_link_no_self_reference" CHECK (upstream_skill <> downstream_skill AND upstream_skill IS NOT NULL AND downstream_skill IS NOT NULL)
-- Foreign-key constraints:
--     "skill_link_created_by_fkey" FOREIGN KEY (created_by) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "skill_link_downstream_skill_fkey" FOREIGN KEY (downstream_skill) REFERENCES skill(id) ON DELETE CASCADE
--     "skill_link_updated_by_fkey" FOREIGN KEY (updated_by) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "skill_link_upstream_skill_fkey" FOREIGN KEY (upstream_skill) REFERENCES skill(id) ON DELETE CASCADE
-- Policies:
--     POLICY "skill_link DELETE" FOR DELETE
--       USING (true)
--     POLICY "skill_link INSERT" FOR INSERT
--       WITH CHECK (true)
--     POLICY "skill_link SELECT" FOR SELECT
--       USING (true)
--     POLICY "skill_link UPDATE" FOR UPDATE
--       USING (true)
-- Triggers:
--     log_operation AFTER INSERT OR DELETE OR UPDATE ON skill_link FOR EACH ROW EXECUTE FUNCTION tgr_log_operation()
--     run_tgr_apply_audit BEFORE INSERT OR UPDATE ON skill_link FOR EACH ROW EXECUTE FUNCTION tgr_apply_audit()
--     set_default_level_on_parent BEFORE INSERT OR UPDATE ON skill_link FOR EACH ROW EXECUTE FUNCTION tgr_set_default_level_on_parent()
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.skill_link)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.skill_link)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: skill_link; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.skill_link (
    id text DEFAULT public.generate_typed_uuid('sklconn'::text) NOT NULL,
    _type text,
    _weight double precision,
    downstream_skill text,
    upstream_skill text,
    metadata jsonb,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    updated_date timestamp with time zone DEFAULT now() NOT NULL,
    created_by public.typed_uuid,
    updated_by public.typed_uuid,
    CONSTRAINT skill_link__id__check_prefix CHECK (public.is_valid_typed_uuid('sklconn'::text, (id)::public.typed_uuid)),
    CONSTRAINT skill_link_no_self_reference CHECK (((upstream_skill <> downstream_skill) AND (upstream_skill IS NOT NULL) AND (downstream_skill IS NOT NULL)))
);


ALTER TABLE public.skill_link OWNER TO postgres;

--
-- Name: TABLE skill_link; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.skill_link IS 'Table holding connections between skills';


--
-- Name: COLUMN skill_link.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.skill_link.id IS 'Unique identifier for the skill connection';


--
-- Name: COLUMN skill_link._type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.skill_link._type IS 'Type of the skill connection';


--
-- Name: COLUMN skill_link._weight; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.skill_link._weight IS 'Weight of the skill connection';


--
-- Name: COLUMN skill_link.downstream_skill; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.skill_link.downstream_skill IS 'Reference to the downstream skill in the skill connection';


--
-- Name: COLUMN skill_link.upstream_skill; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.skill_link.upstream_skill IS 'Reference to the upstream skill in the skill connection';


--
-- Name: COLUMN skill_link.metadata; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.skill_link.metadata IS 'Metadata associated with the skill connection';


--
-- Name: COLUMN skill_link.created_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.skill_link.created_date IS 'Timestamp when the skill connection was created';


--
-- Name: COLUMN skill_link.updated_date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.skill_link.updated_date IS 'Timestamp when the skill connection was last updated';


--
-- Name: COLUMN skill_link.created_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.skill_link.created_by IS 'User who created the skill connection';


--
-- Name: COLUMN skill_link.updated_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.skill_link.updated_by IS 'User who last updated the skill connection';


--
-- Name: CONSTRAINT skill_link_no_self_reference ON skill_link; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON CONSTRAINT skill_link_no_self_reference ON public.skill_link IS 'Prevents a skill from being linked to itself';


--
-- Name: skill_link skill_link_downstream_skill_upstream_skill_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.skill_link
    ADD CONSTRAINT skill_link_downstream_skill_upstream_skill_unique UNIQUE (downstream_skill, upstream_skill);


--
-- Name: skill_link skill_link_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.skill_link
    ADD CONSTRAINT skill_link_pkey PRIMARY KEY (id);


--
-- Name: skill_link log_operation; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER log_operation AFTER INSERT OR DELETE OR UPDATE ON public.skill_link FOR EACH ROW EXECUTE FUNCTION public.tgr_log_operation();


--
-- Name: skill_link run_tgr_apply_audit; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER run_tgr_apply_audit BEFORE INSERT OR UPDATE ON public.skill_link FOR EACH ROW EXECUTE FUNCTION public.tgr_apply_audit();


--
-- Name: skill_link set_default_level_on_parent; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER set_default_level_on_parent BEFORE INSERT OR UPDATE ON public.skill_link FOR EACH ROW EXECUTE FUNCTION public.tgr_set_default_level_on_parent();


--
-- Name: skill_link skill_link_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.skill_link
    ADD CONSTRAINT skill_link_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: skill_link skill_link_downstream_skill_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.skill_link
    ADD CONSTRAINT skill_link_downstream_skill_fkey FOREIGN KEY (downstream_skill) REFERENCES public.skill(id) ON DELETE CASCADE;


--
-- Name: CONSTRAINT skill_link_downstream_skill_fkey ON skill_link; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON CONSTRAINT skill_link_downstream_skill_fkey ON public.skill_link IS '@graphql({"foreign_name": "downstream", "local_name": "downstreamOf"})';


--
-- Name: skill_link skill_link_updated_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.skill_link
    ADD CONSTRAINT skill_link_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: skill_link skill_link_upstream_skill_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.skill_link
    ADD CONSTRAINT skill_link_upstream_skill_fkey FOREIGN KEY (upstream_skill) REFERENCES public.skill(id) ON DELETE CASCADE;


--
-- Name: CONSTRAINT skill_link_upstream_skill_fkey ON skill_link; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON CONSTRAINT skill_link_upstream_skill_fkey ON public.skill_link IS '@graphql({"foreign_name": "upstream", "local_name": "upstreamOf"})';


--
-- Name: skill_link; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.skill_link ENABLE ROW LEVEL SECURITY;

--
-- Name: skill_link skill_link DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "skill_link DELETE" ON public.skill_link FOR DELETE USING (true);


--
-- Name: skill_link skill_link INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "skill_link INSERT" ON public.skill_link FOR INSERT WITH CHECK (true);


--
-- Name: skill_link skill_link SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "skill_link SELECT" ON public.skill_link FOR SELECT USING (true);


--
-- Name: skill_link skill_link UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "skill_link UPDATE" ON public.skill_link FOR UPDATE USING (true);


--
-- Name: TABLE skill_link; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.skill_link TO anon;
GRANT ALL ON TABLE public.skill_link TO authenticated;
GRANT ALL ON TABLE public.skill_link TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.skill_link)
---------------------------------------------------------------------------

