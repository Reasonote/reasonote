---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Table: public.blog_post

---------------------------------------------------------------------------
-- BEGIN: TABLE DESCRIPTION (TABLE: public.blog_post)
------------------------------
--                                           Table "public.blog_post"
--       Column       |           Type           | Collation | Nullable |                Default                
-- -------------------+--------------------------+-----------+----------+---------------------------------------
--  id                | text                     |           | not null | generate_typed_uuid('blogpost'::text)
--  title             | text                     |           | not null | 
--  short_description | text                     |           |          | 
--  slug              | text                     |           | not null | 
--  tags              | text[]                   |           | not null | '{}'::text[]
--  content           | text                     |           | not null | 
--  created_by        | text                     |           |          | 
--  updated_by        | text                     |           |          | 
--  is_published      | boolean                  |           | not null | false
--  created_date      | timestamp with time zone |           | not null | now()
--  updated_date      | timestamp with time zone |           | not null | now()
-- Indexes:
--     "blog_post_pkey" PRIMARY KEY, btree (id)
--     "blog_post_created_date_idx" btree (created_date)
--     "blog_post_slug_idx" btree (slug)
--     "blog_post_slug_key" UNIQUE CONSTRAINT, btree (slug)
-- Check constraints:
--     "blog_post__id__check_prefix" CHECK (is_valid_typed_uuid('blogpost'::text, id::typed_uuid))
-- Foreign-key constraints:
--     "blog_post_created_by_fkey" FOREIGN KEY (created_by) REFERENCES rsn_user(id) ON DELETE SET NULL
--     "blog_post_updated_by_fkey" FOREIGN KEY (updated_by) REFERENCES rsn_user(id) ON DELETE SET NULL
-- Policies:
--     POLICY "blog_post DELETE" FOR DELETE
--       USING (is_admin())
--     POLICY "blog_post INSERT" FOR INSERT
--       WITH CHECK (is_admin())
--     POLICY "blog_post SELECT" FOR SELECT
--       USING (((is_published = true) OR ((is_published = false) AND is_admin())))
--     POLICY "blog_post UPDATE" FOR UPDATE
--       USING (is_admin())
-- Triggers:
--     log_operation AFTER INSERT OR DELETE OR UPDATE ON blog_post FOR EACH ROW EXECUTE FUNCTION tgr_log_operation()
--     run_tgr_apply_audit BEFORE INSERT OR UPDATE ON blog_post FOR EACH ROW EXECUTE FUNCTION tgr_apply_audit()
-- 
-- 

------------------------------
-- END: TABLE DESCRIPTION (TABLE: public.blog_post)
---------------------------------------------------------------------------


---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (TABLE: public.blog_post)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: blog_post; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_post (
    id text DEFAULT public.generate_typed_uuid('blogpost'::text) NOT NULL,
    title text NOT NULL,
    short_description text,
    slug text NOT NULL,
    tags text[] DEFAULT '{}'::text[] NOT NULL,
    content text NOT NULL,
    created_by text,
    updated_by text,
    is_published boolean DEFAULT false NOT NULL,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    updated_date timestamp with time zone DEFAULT now() NOT NULL,
    CONSTRAINT blog_post__id__check_prefix CHECK (public.is_valid_typed_uuid('blogpost'::text, (id)::public.typed_uuid))
);


ALTER TABLE public.blog_post OWNER TO postgres;

--
-- Name: blog_post blog_post_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_post
    ADD CONSTRAINT blog_post_pkey PRIMARY KEY (id);


--
-- Name: blog_post blog_post_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_post
    ADD CONSTRAINT blog_post_slug_key UNIQUE (slug);


--
-- Name: blog_post_created_date_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_post_created_date_idx ON public.blog_post USING btree (created_date);


--
-- Name: blog_post_slug_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_post_slug_idx ON public.blog_post USING btree (slug);


--
-- Name: blog_post log_operation; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER log_operation AFTER INSERT OR DELETE OR UPDATE ON public.blog_post FOR EACH ROW EXECUTE FUNCTION public.tgr_log_operation();


--
-- Name: blog_post run_tgr_apply_audit; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER run_tgr_apply_audit BEFORE INSERT OR UPDATE ON public.blog_post FOR EACH ROW EXECUTE FUNCTION public.tgr_apply_audit();


--
-- Name: blog_post blog_post_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_post
    ADD CONSTRAINT blog_post_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: blog_post blog_post_updated_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_post
    ADD CONSTRAINT blog_post_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.rsn_user(id) ON DELETE SET NULL;


--
-- Name: blog_post; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_post ENABLE ROW LEVEL SECURITY;

--
-- Name: blog_post blog_post DELETE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "blog_post DELETE" ON public.blog_post FOR DELETE USING (public.is_admin());


--
-- Name: blog_post blog_post INSERT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "blog_post INSERT" ON public.blog_post FOR INSERT WITH CHECK (public.is_admin());


--
-- Name: blog_post blog_post SELECT; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "blog_post SELECT" ON public.blog_post FOR SELECT USING (((is_published = true) OR ((is_published = false) AND public.is_admin())));


--
-- Name: blog_post blog_post UPDATE; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "blog_post UPDATE" ON public.blog_post FOR UPDATE USING (public.is_admin());


--
-- Name: TABLE blog_post; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.blog_post TO anon;
GRANT ALL ON TABLE public.blog_post TO authenticated;
GRANT ALL ON TABLE public.blog_post TO service_role;


--
-- PostgreSQL database dump complete
--



------------------------------
-- END: PG_DUMP RESULT (TABLE: public.blog_post)
---------------------------------------------------------------------------

