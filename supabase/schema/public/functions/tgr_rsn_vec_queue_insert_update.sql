---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Function: public.tgr_rsn_vec_queue_insert_update

---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (FUNCTION: public.tgr_rsn_vec_queue_insert_update)
------------------------------
CREATE OR REPLACE FUNCTION public.tgr_rsn_vec_queue_insert_update()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
DECLARE
    _colname TEXT;
    _colpath TEXT;
    _has_changed BOOLEAN;
    _table_configured BOOLEAN;
BEGIN
    -- Check if the table is configured in rsn_vec_config
    SELECT EXISTS(
        SELECT 1
        FROM rsn_vec_config
        WHERE tablename = TG_TABLE_NAME
    ) INTO _table_configured;

    -- Proceed only if the table is configured
    IF _table_configured THEN
        IF (TG_OP = 'UPDATE') THEN
            FOR _colname, _colpath IN
                SELECT colname, colpath
                FROM rsn_vec_config
                WHERE tablename = TG_TABLE_NAME
            LOOP
                _has_changed := FALSE;
                IF (_colpath IS NULL OR _colpath = '') THEN
                    EXECUTE format('SELECT ($1).%I IS DISTINCT FROM ($2).%I', _colname, _colname) INTO _has_changed USING NEW, OLD;
                ELSE
                    EXECUTE format('SELECT jsonb_extract_path_text(($1).%I, %L) IS DISTINCT FROM jsonb_extract_path_text(($2).%I, %L)', _colname, _colpath, _colname, _colpath) INTO _has_changed USING NEW, OLD;
                END IF;

                IF _has_changed THEN
                    INSERT INTO rsn_vec_queue (_ref_id, colname) VALUES (NEW.id, _colname) ON CONFLICT DO NOTHING;
                END IF;
            END LOOP;

        ELSIF (TG_OP = 'INSERT') THEN
            -- Loop through all configured items for this table in rsn_vec_config
            FOR _colname IN
                SELECT colname
                FROM rsn_vec_config
                WHERE tablename = TG_TABLE_NAME
            LOOP
                INSERT INTO rsn_vec_queue (_ref_id, colname) VALUES (NEW.id, _colname) ON CONFLICT DO NOTHING;
            END LOOP;
        END IF;
    END IF;

    RETURN NEW;
END
$function$



------------------------------
-- END: PG_DUMP RESULT (FUNCTION: public.tgr_rsn_vec_queue_insert_update)
---------------------------------------------------------------------------
