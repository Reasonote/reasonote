---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- Function: public.match_rsn_page_vectors

---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (FUNCTION: public.match_rsn_page_vectors)
------------------------------
CREATE OR REPLACE FUNCTION public.match_rsn_page_vectors(embedding vector, match_threshold double precision, match_count integer, min_content_length integer, rsn_page_ids text[] DEFAULT NULL::text[], allow_child_pages boolean DEFAULT true)
 RETURNS TABLE(id text, raw_content text, similarity double precision, rsn_page_id text)
 LANGUAGE plpgsql
AS $function$ #variable_conflict use_variable
BEGIN
    -- Begin the query to find similar vectors
    RETURN QUERY WITH page_ids AS (
        SELECT t.id FROM unnest(rsn_page_ids) AS t(id)
        UNION ALL
        SELECT get_child_pages.id FROM get_child_pages(rsn_page_ids) WHERE allow_child_pages
    )
    SELECT 
        -- Select relevant columns from the 'rsn_page_vector' table
        rsn_page_vector.id,
        rsn_page_vector.raw_content,
        -- Compute similarity score based on the distance between vectors
        (rsn_page_vector.embedding <#> embedding) * -1 as similarity,
        -- Include the page ID related to the vector
        rsn_page_vector.rsn_page_id  
    FROM rsn_page_vector
    -- Join with our temporary table containing relevant page IDs
    INNER JOIN page_ids ON rsn_page_vector.id = page_ids.id
    WHERE 
        -- Filter out vectors with insufficient content length
        length(rsn_page_vector.raw_content) >= min_content_length 
        -- Apply the threshold filter for similarity
        AND (rsn_page_vector.embedding <#> embedding) * -1 > match_threshold
    -- Order the results by similarity score
    ORDER BY similarity
    -- Limit the number of results
    LIMIT match_count;

END;
$function$



------------------------------
-- END: PG_DUMP RESULT (FUNCTION: public.match_rsn_page_vectors)
---------------------------------------------------------------------------
