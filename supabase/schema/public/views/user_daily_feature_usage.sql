---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- View: public.user_daily_feature_usage

---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (VIEW: public.user_daily_feature_usage)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: user_daily_feature_usage; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.user_daily_feature_usage AS
 SELECT u._user AS user_id,
    'lessons_generated'::text AS feature_id,
    count(*) AS count_in_period,
    min(u.created_date) AS period_start,
    max(u.created_date) AS period_end
   FROM public.user_lesson_result u
  WHERE ((u.created_date >= date_trunc('day'::text, now())) AND (u.created_date < (date_trunc('day'::text, now()) + '1 day'::interval)))
  GROUP BY u._user
UNION ALL
 SELECT p.created_by AS user_id,
    'podcasts_generated'::text AS feature_id,
    count(*) AS count_in_period,
    min(p.created_date) AS period_start,
    max(p.created_date) AS period_end
   FROM public.podcast p
  WHERE ((p.created_date >= date_trunc('day'::text, now())) AND (p.created_date < (date_trunc('day'::text, now()) + '1 day'::interval)))
  GROUP BY p.created_by
UNION ALL
 SELECT a._user AS user_id,
    'practice_activities'::text AS feature_id,
    count(*) AS count_in_period,
    min(a.created_date) AS period_start,
    max(a.created_date) AS period_end
   FROM public.user_activity_result a
  WHERE ((a.created_date >= date_trunc('day'::text, now())) AND (a.created_date < (date_trunc('day'::text, now()) + '1 day'::interval)))
  GROUP BY a._user;


ALTER TABLE public.user_daily_feature_usage OWNER TO postgres;

--
-- Name: TABLE user_daily_feature_usage; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.user_daily_feature_usage TO anon;
GRANT ALL ON TABLE public.user_daily_feature_usage TO authenticated;
GRANT ALL ON TABLE public.user_daily_feature_usage TO service_role;


--
-- PostgreSQL database dump complete
--


------------------------------
-- END: PG_DUMP RESULT (VIEW: public.user_daily_feature_usage)
---------------------------------------------------------------------------
