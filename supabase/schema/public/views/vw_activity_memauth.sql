---------------------------------------------------------------------------
-- 
-- ⚠️ DO NOT EDIT THIS FILE!
-- THIS FILE WAS AUTOMATICALLY GENERATED FROM THE CONTENTS OF A CLEANLY-MIGRATED DATABASE.
-- 
-- ℹ️ To change the contents of this file, create a new migration under 'supabase/migrations/'
-- that makes the change you would like to see.
-- 
---------------------------------------------------------------------------
-- View: public.vw_activity_memauth

---------------------------------------------------------------------------
-- BEGIN: PG_DUMP RESULT (VIEW: public.vw_activity_memauth)
------------------------------
--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 15.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: vw_activity_memauth; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.vw_activity_memauth AS
 WITH combined_permissions AS (
         SELECT ma.id AS memauth_id,
            ma.principal_id,
            ma.principal_type,
            ma.resource_entity_id AS activity_id,
            ma.access_level,
            array_agg(alp.permission_code ORDER BY alp.permission_code) AS permissions,
            ma.is_public
           FROM ((public.memauth ma
             JOIN public.access_level_permission alp ON ((((alp.entity_type)::text = 'activity'::text) AND (upper((alp.access_level)::text) = upper((ma.access_level)::text)))))
             JOIN public.activity a ON ((a.id = ma.resource_entity_id)))
          WHERE (ma.resource_entity_type = 'activity'::text)
          GROUP BY ma.id, ma.principal_id, ma.principal_type, ma.resource_entity_id, ma.access_level, ma.is_public
        UNION
         SELECT vlm.memauth_id,
            vlm.principal_id,
            vlm.principal_type,
            la.activity AS activity_id,
            vlm.access_level,
            vlm.permissions,
            vlm.is_public
           FROM (public.vw_lesson_memauth vlm
             JOIN public.lesson_activity la ON ((la.lesson = vlm.lesson_id)))
        )
 SELECT flattened.memauth_id,
    flattened.principal_id,
    flattened.principal_type,
    flattened.activity_id,
    flattened.access_level,
    array_agg(DISTINCT flattened.permission ORDER BY flattened.permission) AS permissions,
    bool_or(flattened.is_public) AS is_public
   FROM ( SELECT combined_permissions.memauth_id,
            combined_permissions.principal_id,
            combined_permissions.principal_type,
            combined_permissions.activity_id,
            combined_permissions.access_level,
            unnest(combined_permissions.permissions) AS permission,
            combined_permissions.is_public
           FROM combined_permissions) flattened
  GROUP BY flattened.memauth_id, flattened.principal_id, flattened.principal_type, flattened.activity_id, flattened.access_level;


ALTER TABLE public.vw_activity_memauth OWNER TO postgres;

--
-- Name: VIEW vw_activity_memauth; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON VIEW public.vw_activity_memauth IS 'Shows activity authorizations, including those inherited from lessons through lesson_activity. Shows what principals have which access_levels & permissions on which activity.';


--
-- Name: TABLE vw_activity_memauth; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.vw_activity_memauth TO anon;
GRANT ALL ON TABLE public.vw_activity_memauth TO authenticated;
GRANT ALL ON TABLE public.vw_activity_memauth TO service_role;


--
-- PostgreSQL database dump complete
--


------------------------------
-- END: PG_DUMP RESULT (VIEW: public.vw_activity_memauth)
---------------------------------------------------------------------------
